{
  "version": 3,
  "sources": ["../node_modules/markdown-it-emoji/lib/data/shortcuts.js", "../node_modules/markdown-it-emoji/lib/render.js", "../node_modules/markdown-it-emoji/lib/replace.js", "../node_modules/markdown-it-emoji/lib/normalize_opts.js", "../node_modules/markdown-it-emoji/bare.js", "../node_modules/markdown-it-emoji/index.js", "../src/config.js", "../src/storage.js", "../src/registerCommand.js", "../src/message.js", "../node_modules/shirkhan-alphabet/dist/shirkhan-alphabet.es.js", "../src/markdownItPlugin.js", "../src/activate.js", "../src/deactivate.js", "../src/main.js"],
  "sourcesContent": ["// Emoticons -> Emoji mapping.\n//\n// (!) Some patterns skipped, to avoid collisions\n// without increase matcher complicity. Than can change in future.\n//\n// Places to look for more emoticons info:\n//\n// - http://en.wikipedia.org/wiki/List_of_emoticons#Western\n// - https://github.com/wooorm/emoticon/blob/master/Support.md\n// - http://factoryjoe.com/projects/emoticons/\n//\n'use strict';\n\nmodule.exports = {\n  angry:            [ '>:(', '>:-(' ],\n  blush:            [ ':\")', ':-\")' ],\n  broken_heart:     [ '</3', '<\\\\3' ],\n  // :\\ and :-\\ not used because of conflict with markdown escaping\n  confused:         [ ':/', ':-/' ], // twemoji shows question\n  cry:              [ \":'(\", \":'-(\", ':,(', ':,-(' ],\n  frowning:         [ ':(', ':-(' ],\n  heart:            [ '<3' ],\n  imp:              [ ']:(', ']:-(' ],\n  innocent:         [ 'o:)', 'O:)', 'o:-)', 'O:-)', '0:)', '0:-)' ],\n  joy:              [ \":')\", \":'-)\", ':,)', ':,-)', \":'D\", \":'-D\", ':,D', ':,-D' ],\n  kissing:          [ ':*', ':-*' ],\n  laughing:         [ 'x-)', 'X-)' ],\n  neutral_face:     [ ':|', ':-|' ],\n  open_mouth:       [ ':o', ':-o', ':O', ':-O' ],\n  rage:             [ ':@', ':-@' ],\n  smile:            [ ':D', ':-D' ],\n  smiley:           [ ':)', ':-)' ],\n  smiling_imp:      [ ']:)', ']:-)' ],\n  sob:              [ \":,'(\", \":,'-(\", ';(', ';-(' ],\n  stuck_out_tongue: [ ':P', ':-P' ],\n  sunglasses:       [ '8-)', 'B-)' ],\n  sweat:            [ ',:(', ',:-(' ],\n  sweat_smile:      [ ',:)', ',:-)' ],\n  unamused:         [ ':s', ':-S', ':z', ':-Z', ':$', ':-$' ],\n  wink:             [ ';)', ';-)' ]\n};\n", "'use strict';\n\nmodule.exports = function emoji_html(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n", "// Emojies & shortcuts replacement logic.\n//\n// Note: In theory, it could be faster to parse :smile: in inline chain and\n// leave only shortcuts here. But, who care...\n//\n\n'use strict';\n\n\nmodule.exports = function create_rule(md, emojies, shortcuts, scanRE, replaceRE) {\n  var arrayReplaceAt = md.utils.arrayReplaceAt,\n      ucm = md.utils.lib.ucmicro,\n      ZPCc = new RegExp([ ucm.Z.source, ucm.P.source, ucm.Cc.source ].join('|'));\n\n  function splitTextToken(text, level, Token) {\n    var token, last_pos = 0, nodes = [];\n\n    text.replace(replaceRE, function (match, offset, src) {\n      var emoji_name;\n      // Validate emoji name\n      if (shortcuts.hasOwnProperty(match)) {\n        // replace shortcut with full name\n        emoji_name = shortcuts[match];\n\n        // Don't allow letters before any shortcut (as in no \":/\" in http://)\n        if (offset > 0 && !ZPCc.test(src[offset - 1])) {\n          return;\n        }\n\n        // Don't allow letters after any shortcut\n        if (offset + match.length < src.length && !ZPCc.test(src[offset + match.length])) {\n          return;\n        }\n      } else {\n        emoji_name = match.slice(1, -1);\n      }\n\n      // Add new tokens to pending list\n      if (offset > last_pos) {\n        token         = new Token('text', '', 0);\n        token.content = text.slice(last_pos, offset);\n        nodes.push(token);\n      }\n\n      token         = new Token('emoji', '', 0);\n      token.markup  = emoji_name;\n      token.content = emojies[emoji_name];\n      nodes.push(token);\n\n      last_pos = offset + match.length;\n    });\n\n    if (last_pos < text.length) {\n      token         = new Token('text', '', 0);\n      token.content = text.slice(last_pos);\n      nodes.push(token);\n    }\n\n    return nodes;\n  }\n\n  return function emoji_replace(state) {\n    var i, j, l, tokens, token,\n        blockTokens = state.tokens,\n        autolinkLevel = 0;\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      // Use reversed logic in links start/end match\n      for (i = tokens.length - 1; i >= 0; i--) {\n        token = tokens[i];\n\n        if (token.type === 'link_open' || token.type === 'link_close') {\n          if (token.info === 'auto') { autolinkLevel -= token.nesting; }\n        }\n\n        if (token.type === 'text' && autolinkLevel === 0 && scanRE.test(token.content)) {\n          // replace current node\n          blockTokens[j].children = tokens = arrayReplaceAt(\n            tokens, i, splitTextToken(token.content, token.level, state.Token)\n          );\n        }\n      }\n    }\n  };\n};\n", "// Convert input options to more useable format\n// and compile search regexp\n\n'use strict';\n\n\nfunction quoteRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n}\n\n\nmodule.exports = function normalize_opts(options) {\n  var emojies = options.defs,\n      shortcuts;\n\n  // Filter emojies by whitelist, if needed\n  if (options.enabled.length) {\n    emojies = Object.keys(emojies).reduce(function (acc, key) {\n      if (options.enabled.indexOf(key) >= 0) {\n        acc[key] = emojies[key];\n      }\n      return acc;\n    }, {});\n  }\n\n  // Flatten shortcuts to simple object: { alias: emoji_name }\n  shortcuts = Object.keys(options.shortcuts).reduce(function (acc, key) {\n    // Skip aliases for filtered emojies, to reduce regexp\n    if (!emojies[key]) { return acc; }\n\n    if (Array.isArray(options.shortcuts[key])) {\n      options.shortcuts[key].forEach(function (alias) {\n        acc[alias] = key;\n      });\n      return acc;\n    }\n\n    acc[options.shortcuts[key]] = key;\n    return acc;\n  }, {});\n\n  var keys = Object.keys(emojies),\n      names;\n\n  // If no definitions are given, return empty regex to avoid replacements with 'undefined'.\n  if (keys.length === 0) {\n    names = '^$';\n  } else {\n    // Compile regexp\n    names = keys\n      .map(function (name) { return ':' + name + ':'; })\n      .concat(Object.keys(shortcuts))\n      .sort()\n      .reverse()\n      .map(function (name) { return quoteRE(name); })\n      .join('|');\n  }\n  var scanRE = RegExp(names);\n  var replaceRE = RegExp(names, 'g');\n\n  return {\n    defs: emojies,\n    shortcuts: shortcuts,\n    scanRE: scanRE,\n    replaceRE: replaceRE\n  };\n};\n", "'use strict';\n\n\nvar emoji_html        = require('./lib/render');\nvar emoji_replace     = require('./lib/replace');\nvar normalize_opts    = require('./lib/normalize_opts');\n\n\nmodule.exports = function emoji_plugin(md, options) {\n  var defaults = {\n    defs: {},\n    shortcuts: {},\n    enabled: []\n  };\n\n  var opts = normalize_opts(md.utils.assign({}, defaults, options || {}));\n\n  md.renderer.rules.emoji = emoji_html;\n\n  md.core.ruler.push('emoji', emoji_replace(md, opts.defs, opts.shortcuts, opts.scanRE, opts.replaceRE));\n};\n", "'use strict';\n\n\nvar emojies_defs      = require('./lib/data/full.json');\nvar emojies_shortcuts = require('./lib/data/shortcuts');\nvar bare_emoji_plugin = require('./bare');\n\n\nmodule.exports = function emoji_plugin(md, options) {\n  var defaults = {\n    defs: emojies_defs,\n    shortcuts: emojies_shortcuts,\n    enabled: []\n  };\n\n  var opts = md.utils.assign({}, defaults, options || {});\n\n  bare_emoji_plugin(md, opts);\n};\n", "const vscode = require(\"vscode\");\n\n/**\n *\n * @param {string} key\n * @returns {boolean |undefined}\n */\nexport function getKey(key) {\n  return vscode.workspace.getConfiguration(\"shirkhanMarkdown\").get(key);\n}\n\n/**\n * \u63D2\u4EF6\u9ED8\u8BA4\u662F\u5426\u8F6C\u6362markdown\u5185\u5BB9\n * @returns {boolean | undefined}\n */\nexport function getActiveConvert() {\n  return getKey(\"activeConvert\");\n}\n", "/**\n *\n *@param {import(\"vscode\").ExtensionContext} context\n * @param {string} key\n * @param {any} value\n */\nexport function setGlobalStorageKey(context, key, value) {\n  context.globalState.update(key, value);\n}\n\n/**\n * @param {import(\"vscode\").ExtensionContext} context\n * @param {string} key The stored value or `undefined`.\n * @returns\n */\nexport function getGlobalStorageKey(context, key) {\n  return context.globalState.get(key);\n}\n\n/**\n * @param {import(\"vscode\").ExtensionContext} context\n * @param {string} key The stored value or `undefined`.\n * @returns\n */\nexport function removeGlobalStorageKey(context, key) {\n  context.globalState.setKeysForSync([key]);\n  return context.globalState.update(key, undefined);\n}\n\n/** --------------- */\n\n/**\n *\n * @param {import(\"vscode\").ExtensionContext} context\n * @param {boolean} value\n * @returns\n */\nexport function setConvertState(context, value) {\n  return setGlobalStorageKey(context, \"convert-state\", value);\n}\n\n/**\n *\n @param {import(\"vscode\").ExtensionContext} context\n * @returns\n */\nexport function getConvertState(context) {\n  return getGlobalStorageKey(context, \"convert-state\");\n}\n", "const vscode = require(\"vscode\");\n\n/**\n * Registers a command that can be invoked via a keyboard shortcut,\n * a menu item, an action, or directly.\n *\n * Registering a command with an existing command identifier twice\n * will cause an error.\n *\n * @param {import(\"vscode\").ExtensionContext} context\n * @param commandUniqName A unique identifier for the command.\n * @param handlerFunc A command handler function.\n * @param thisArg The `this` context used when invoking the handler function.\n * @return Disposable which unregisters this command on disposal.\n */\nexport function registerCommand(\n  context,\n  commandUniqName,\n  handlerFunc,\n  thisArg = undefined\n) {\n  let disposable = vscode.commands.registerCommand(\n    commandUniqName,\n    handlerFunc,\n    thisArg\n  );\n\n  context.subscriptions.push(disposable);\n}\n", "const vscode = require(\"vscode\");\n\nexport const showInfoMessage = (message) => {\n  vscode.window.showInformationMessage(message);\n};\n\nexport const showErrorMessage = (message) => {\n  vscode.window.showErrorMessage(message);\n};\n", "const TRANSLATIONAL_MARK$1 = \"/\";\nconst SEPARATE_MARK = \"h\";\nconst SYLLABIFY_MARK = \"`\";\nconst READABILITY_MARK = \"'\";\nconst HEMZE = \"\\u0626\";\nconst table$1 = [\n  {\n    ug: \"\\u0626\",\n    uly: \"x\",\n    khan: \"x\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u0627\",\n    uly: \"a\",\n    khan: \"a\",\n    volwes: true,\n    punctuation: false\n  },\n  {\n    ug: \"\\u06D5\",\n    uly: \"e\",\n    khan: \"e\",\n    volwes: true,\n    punctuation: false\n  },\n  {\n    ug: \"\\u06D0\",\n    uly: \"\\xEB\",\n    khan: \"eh\",\n    volwes: true,\n    punctuation: false\n  },\n  {\n    ug: \"\\u0649\",\n    uly: \"i\",\n    khan: \"i\",\n    volwes: true,\n    punctuation: false\n  },\n  {\n    ug: \"\\u0648\",\n    uly: \"o\",\n    khan: \"o\",\n    volwes: true,\n    punctuation: false\n  },\n  {\n    ug: \"\\u06C7\",\n    uly: \"u\",\n    khan: \"u\",\n    volwes: true,\n    punctuation: false\n  },\n  {\n    ug: \"\\u06C6\",\n    uly: \"\\xF6\",\n    khan: \"c\",\n    volwes: true,\n    punctuation: false\n  },\n  {\n    ug: \"\\u06C8\",\n    uly: \"\\xFC\",\n    khan: \"v\",\n    volwes: true,\n    punctuation: false\n  },\n  {\n    ug: \"\\u0628\",\n    uly: \"b\",\n    khan: \"b\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u067E\",\n    uly: \"p\",\n    khan: \"p\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u062A\",\n    uly: \"t\",\n    khan: \"t\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u062C\",\n    uly: \"j\",\n    khan: \"j\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u0686\",\n    uly: \"ch\",\n    khan: \"ch\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u062E\",\n    uly: \"x\",\n    khan: \"kh\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u062F\",\n    uly: \"d\",\n    khan: \"d\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u0631\",\n    uly: \"r\",\n    khan: \"r\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u0632\",\n    uly: \"z\",\n    khan: \"z\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u0698\",\n    uly: \"zh\",\n    khan: \"zh\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u0633\",\n    uly: \"s\",\n    khan: \"s\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u0634\",\n    uly: \"sh\",\n    khan: \"sh\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u063A\",\n    uly: \"gh\",\n    khan: \"gh\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u0642\",\n    uly: \"q\",\n    khan: \"q\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u0641\",\n    uly: \"f\",\n    khan: \"f\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u0643\",\n    uly: \"k\",\n    khan: \"k\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u06AF\",\n    uly: \"g\",\n    khan: \"g\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u06AD\",\n    uly: \"ng\",\n    khan: \"ng\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u0644\",\n    uly: \"l\",\n    khan: \"l\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u0645\",\n    uly: \"m\",\n    khan: \"m\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u0646\",\n    uly: \"n\",\n    khan: \"n\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u0646\",\n    uly: \"n\",\n    khan: \"n\" + SEPARATE_MARK,\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u06BE\",\n    uly: \"h\",\n    khan: \"wh\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u06CB\",\n    uly: \"w\",\n    khan: \"w\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u064A\",\n    uly: \"y\",\n    khan: \"y\",\n    volwes: false,\n    punctuation: false\n  },\n  {\n    ug: \"\\u061F\",\n    uly: \"?\",\n    khan: \"?\",\n    volwes: false,\n    punctuation: true\n  }\n];\nfunction volwes() {\n  return table$1.filter((item) => item.volwes);\n}\nfunction isVolwes(char, key = \"khan\") {\n  return volwes().map((item) => item[key]).includes(char);\n}\nvar __defProp$1 = Object.defineProperty;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField$1 = (obj, key, value) => {\n  __defNormalProp$1(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nfunction bail(error) {\n  if (error) {\n    throw error;\n  }\n}\n/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\nvar isBuffer = function isBuffer2(obj) {\n  return obj != null && obj.constructor != null && typeof obj.constructor.isBuffer === \"function\" && obj.constructor.isBuffer(obj);\n};\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar isArray = function isArray2(arr) {\n  if (typeof Array.isArray === \"function\") {\n    return Array.isArray(arr);\n  }\n  return toStr.call(arr) === \"[object Array]\";\n};\nvar isPlainObject$1 = function isPlainObject(obj) {\n  if (!obj || toStr.call(obj) !== \"[object Object]\") {\n    return false;\n  }\n  var hasOwnConstructor = hasOwn.call(obj, \"constructor\");\n  var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\");\n  if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n    return false;\n  }\n  var key;\n  for (key in obj) {\n  }\n  return typeof key === \"undefined\" || hasOwn.call(obj, key);\n};\nvar setProperty = function setProperty2(target, options) {\n  if (defineProperty && options.name === \"__proto__\") {\n    defineProperty(target, options.name, {\n      enumerable: true,\n      configurable: true,\n      value: options.newValue,\n      writable: true\n    });\n  } else {\n    target[options.name] = options.newValue;\n  }\n};\nvar getProperty = function getProperty2(obj, name) {\n  if (name === \"__proto__\") {\n    if (!hasOwn.call(obj, name)) {\n      return void 0;\n    } else if (gOPD) {\n      return gOPD(obj, name).value;\n    }\n  }\n  return obj[name];\n};\nvar extend = function extend2() {\n  var options, name, src, copy, copyIsArray, clone;\n  var target = arguments[0];\n  var i = 1;\n  var length = arguments.length;\n  var deep = false;\n  if (typeof target === \"boolean\") {\n    deep = target;\n    target = arguments[1] || {};\n    i = 2;\n  }\n  if (target == null || typeof target !== \"object\" && typeof target !== \"function\") {\n    target = {};\n  }\n  for (; i < length; ++i) {\n    options = arguments[i];\n    if (options != null) {\n      for (name in options) {\n        src = getProperty(target, name);\n        copy = getProperty(options, name);\n        if (target !== copy) {\n          if (deep && copy && (isPlainObject$1(copy) || (copyIsArray = isArray(copy)))) {\n            if (copyIsArray) {\n              copyIsArray = false;\n              clone = src && isArray(src) ? src : [];\n            } else {\n              clone = src && isPlainObject$1(src) ? src : {};\n            }\n            setProperty(target, { name, newValue: extend2(deep, clone, copy) });\n          } else if (typeof copy !== \"undefined\") {\n            setProperty(target, { name, newValue: copy });\n          }\n        }\n      }\n    }\n  }\n  return target;\n};\nfunction isPlainObject2(value) {\n  if (Object.prototype.toString.call(value) !== \"[object Object]\") {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(value);\n  return prototype === null || prototype === Object.prototype;\n}\nfunction trough() {\n  const fns = [];\n  const pipeline = { run, use };\n  return pipeline;\n  function run(...values) {\n    let middlewareIndex = -1;\n    const callback = values.pop();\n    if (typeof callback !== \"function\") {\n      throw new TypeError(\"Expected function as last argument, not \" + callback);\n    }\n    next(null, ...values);\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex];\n      let index2 = -1;\n      if (error) {\n        callback(error);\n        return;\n      }\n      while (++index2 < values.length) {\n        if (output[index2] === null || output[index2] === void 0) {\n          output[index2] = values[index2];\n        }\n      }\n      values = output;\n      if (fn) {\n        wrap(fn, next)(...output);\n      } else {\n        callback(null, ...output);\n      }\n    }\n  }\n  function use(middelware) {\n    if (typeof middelware !== \"function\") {\n      throw new TypeError(\"Expected `middelware` to be a function, not \" + middelware);\n    }\n    fns.push(middelware);\n    return pipeline;\n  }\n}\nfunction wrap(middleware, callback) {\n  let called;\n  return wrapped;\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length;\n    let result;\n    if (fnExpectsCallback) {\n      parameters.push(done);\n    }\n    try {\n      result = middleware(...parameters);\n    } catch (error) {\n      const exception = error;\n      if (fnExpectsCallback && called) {\n        throw exception;\n      }\n      return done(exception);\n    }\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done);\n      } else if (result instanceof Error) {\n        done(result);\n      } else {\n        then(result);\n      }\n    }\n  }\n  function done(error, ...output) {\n    if (!called) {\n      called = true;\n      callback(error, ...output);\n    }\n  }\n  function then(value) {\n    done(null, value);\n  }\n}\nvar own$2 = {}.hasOwnProperty;\nfunction stringifyPosition(value) {\n  if (!value || typeof value !== \"object\") {\n    return \"\";\n  }\n  if (own$2.call(value, \"position\") || own$2.call(value, \"type\")) {\n    return position(value.position);\n  }\n  if (own$2.call(value, \"start\") || own$2.call(value, \"end\")) {\n    return position(value);\n  }\n  if (own$2.call(value, \"line\") || own$2.call(value, \"column\")) {\n    return point(value);\n  }\n  return \"\";\n}\nfunction point(point2) {\n  return index(point2 && point2.line) + \":\" + index(point2 && point2.column);\n}\nfunction position(pos) {\n  return point(pos && pos.start) + \"-\" + point(pos && pos.end);\n}\nfunction index(value) {\n  return value && typeof value === \"number\" ? value : 1;\n}\nclass VFileMessage extends Error {\n  constructor(reason, place, origin) {\n    var parts = [null, null];\n    var position2 = {\n      start: { line: null, column: null },\n      end: { line: null, column: null }\n    };\n    var index2;\n    super();\n    if (typeof place === \"string\") {\n      origin = place;\n      place = null;\n    }\n    if (typeof origin === \"string\") {\n      index2 = origin.indexOf(\":\");\n      if (index2 === -1) {\n        parts[1] = origin;\n      } else {\n        parts[0] = origin.slice(0, index2);\n        parts[1] = origin.slice(index2 + 1);\n      }\n    }\n    if (place) {\n      if (\"type\" in place || \"position\" in place) {\n        if (place.position) {\n          position2 = place.position;\n        }\n      } else if (\"start\" in place || \"end\" in place) {\n        position2 = place;\n      } else if (\"line\" in place || \"column\" in place) {\n        position2.start = place;\n      }\n    }\n    this.name = stringifyPosition(place) || \"1:1\";\n    this.message = typeof reason === \"object\" ? reason.message : reason;\n    this.stack = typeof reason === \"object\" ? reason.stack : \"\";\n    this.reason = this.message;\n    this.line = position2.start.line;\n    this.column = position2.start.column;\n    this.source = parts[0];\n    this.ruleId = parts[1];\n    this.position = position2;\n    this.file;\n    this.fatal;\n    this.url;\n    this.note;\n  }\n}\nVFileMessage.prototype.file = \"\";\nVFileMessage.prototype.name = \"\";\nVFileMessage.prototype.reason = \"\";\nVFileMessage.prototype.message = \"\";\nVFileMessage.prototype.stack = \"\";\nVFileMessage.prototype.fatal = null;\nVFileMessage.prototype.column = null;\nVFileMessage.prototype.line = null;\nVFileMessage.prototype.source = null;\nVFileMessage.prototype.ruleId = null;\nVFileMessage.prototype.position = null;\nconst path = { basename, dirname, extname, join, sep: \"/\" };\nfunction basename(path2, ext) {\n  if (ext !== void 0 && typeof ext !== \"string\") {\n    throw new TypeError('\"ext\" argument must be a string');\n  }\n  assertPath$1(path2);\n  let start = 0;\n  let end = -1;\n  let index2 = path2.length;\n  let seenNonSlash;\n  if (ext === void 0 || ext.length === 0 || ext.length > path2.length) {\n    while (index2--) {\n      if (path2.charCodeAt(index2) === 47) {\n        if (seenNonSlash) {\n          start = index2 + 1;\n          break;\n        }\n      } else if (end < 0) {\n        seenNonSlash = true;\n        end = index2 + 1;\n      }\n    }\n    return end < 0 ? \"\" : path2.slice(start, end);\n  }\n  if (ext === path2) {\n    return \"\";\n  }\n  let firstNonSlashEnd = -1;\n  let extIndex = ext.length - 1;\n  while (index2--) {\n    if (path2.charCodeAt(index2) === 47) {\n      if (seenNonSlash) {\n        start = index2 + 1;\n        break;\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        seenNonSlash = true;\n        firstNonSlashEnd = index2 + 1;\n      }\n      if (extIndex > -1) {\n        if (path2.charCodeAt(index2) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            end = index2;\n          }\n        } else {\n          extIndex = -1;\n          end = firstNonSlashEnd;\n        }\n      }\n    }\n  }\n  if (start === end) {\n    end = firstNonSlashEnd;\n  } else if (end < 0) {\n    end = path2.length;\n  }\n  return path2.slice(start, end);\n}\nfunction dirname(path2) {\n  assertPath$1(path2);\n  if (path2.length === 0) {\n    return \".\";\n  }\n  let end = -1;\n  let index2 = path2.length;\n  let unmatchedSlash;\n  while (--index2) {\n    if (path2.charCodeAt(index2) === 47) {\n      if (unmatchedSlash) {\n        end = index2;\n        break;\n      }\n    } else if (!unmatchedSlash) {\n      unmatchedSlash = true;\n    }\n  }\n  return end < 0 ? path2.charCodeAt(0) === 47 ? \"/\" : \".\" : end === 1 && path2.charCodeAt(0) === 47 ? \"//\" : path2.slice(0, end);\n}\nfunction extname(path2) {\n  assertPath$1(path2);\n  let index2 = path2.length;\n  let end = -1;\n  let startPart = 0;\n  let startDot = -1;\n  let preDotState = 0;\n  let unmatchedSlash;\n  while (index2--) {\n    const code = path2.charCodeAt(index2);\n    if (code === 47) {\n      if (unmatchedSlash) {\n        startPart = index2 + 1;\n        break;\n      }\n      continue;\n    }\n    if (end < 0) {\n      unmatchedSlash = true;\n      end = index2 + 1;\n    }\n    if (code === 46) {\n      if (startDot < 0) {\n        startDot = index2;\n      } else if (preDotState !== 1) {\n        preDotState = 1;\n      }\n    } else if (startDot > -1) {\n      preDotState = -1;\n    }\n  }\n  if (startDot < 0 || end < 0 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return \"\";\n  }\n  return path2.slice(startDot, end);\n}\nfunction join(...segments) {\n  let index2 = -1;\n  let joined;\n  while (++index2 < segments.length) {\n    assertPath$1(segments[index2]);\n    if (segments[index2]) {\n      joined = joined === void 0 ? segments[index2] : joined + \"/\" + segments[index2];\n    }\n  }\n  return joined === void 0 ? \".\" : normalize(joined);\n}\nfunction normalize(path2) {\n  assertPath$1(path2);\n  const absolute = path2.charCodeAt(0) === 47;\n  let value = normalizeString(path2, !absolute);\n  if (value.length === 0 && !absolute) {\n    value = \".\";\n  }\n  if (value.length > 0 && path2.charCodeAt(path2.length - 1) === 47) {\n    value += \"/\";\n  }\n  return absolute ? \"/\" + value : value;\n}\nfunction normalizeString(path2, allowAboveRoot) {\n  let result = \"\";\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let index2 = -1;\n  let code;\n  let lastSlashIndex;\n  while (++index2 <= path2.length) {\n    if (index2 < path2.length) {\n      code = path2.charCodeAt(index2);\n    } else if (code === 47) {\n      break;\n    } else {\n      code = 47;\n    }\n    if (code === 47) {\n      if (lastSlash === index2 - 1 || dots === 1)\n        ;\n      else if (lastSlash !== index2 - 1 && dots === 2) {\n        if (result.length < 2 || lastSegmentLength !== 2 || result.charCodeAt(result.length - 1) !== 46 || result.charCodeAt(result.length - 2) !== 46) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf(\"/\");\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = \"\";\n                lastSegmentLength = 0;\n              } else {\n                result = result.slice(0, lastSlashIndex);\n                lastSegmentLength = result.length - 1 - result.lastIndexOf(\"/\");\n              }\n              lastSlash = index2;\n              dots = 0;\n              continue;\n            }\n          } else if (result.length > 0) {\n            result = \"\";\n            lastSegmentLength = 0;\n            lastSlash = index2;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + \"/..\" : \"..\";\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (result.length > 0) {\n          result += \"/\" + path2.slice(lastSlash + 1, index2);\n        } else {\n          result = path2.slice(lastSlash + 1, index2);\n        }\n        lastSegmentLength = index2 - lastSlash - 1;\n      }\n      lastSlash = index2;\n      dots = 0;\n    } else if (code === 46 && dots > -1) {\n      dots++;\n    } else {\n      dots = -1;\n    }\n  }\n  return result;\n}\nfunction assertPath$1(path2) {\n  if (typeof path2 !== \"string\") {\n    throw new TypeError(\"Path must be a string. Received \" + JSON.stringify(path2));\n  }\n}\nconst proc = { cwd };\nfunction cwd() {\n  return \"/\";\n}\nfunction isUrl(fileURLOrPath) {\n  return fileURLOrPath !== null && typeof fileURLOrPath === \"object\" && fileURLOrPath.href && fileURLOrPath.origin;\n}\nfunction urlToPath(path2) {\n  if (typeof path2 === \"string\") {\n    path2 = new URL(path2);\n  } else if (!isUrl(path2)) {\n    const error = new TypeError('The \"path\" argument must be of type string or an instance of URL. Received `' + path2 + \"`\");\n    error.code = \"ERR_INVALID_ARG_TYPE\";\n    throw error;\n  }\n  if (path2.protocol !== \"file:\") {\n    const error = new TypeError(\"The URL must be of scheme file\");\n    error.code = \"ERR_INVALID_URL_SCHEME\";\n    throw error;\n  }\n  return getPathFromURLPosix(path2);\n}\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== \"\") {\n    const error = new TypeError('File URL host must be \"localhost\" or empty on darwin');\n    error.code = \"ERR_INVALID_FILE_URL_HOST\";\n    throw error;\n  }\n  const pathname = url.pathname;\n  let index2 = -1;\n  while (++index2 < pathname.length) {\n    if (pathname.charCodeAt(index2) === 37 && pathname.charCodeAt(index2 + 1) === 50) {\n      const third = pathname.charCodeAt(index2 + 2);\n      if (third === 70 || third === 102) {\n        const error = new TypeError(\"File URL path must not include encoded / characters\");\n        error.code = \"ERR_INVALID_FILE_URL_PATH\";\n        throw error;\n      }\n    }\n  }\n  return decodeURIComponent(pathname);\n}\nconst order = [\"history\", \"path\", \"basename\", \"stem\", \"extname\", \"dirname\"];\nclass VFile {\n  constructor(value) {\n    let options;\n    if (!value) {\n      options = {};\n    } else if (typeof value === \"string\" || isBuffer(value)) {\n      options = { value };\n    } else if (isUrl(value)) {\n      options = { path: value };\n    } else {\n      options = value;\n    }\n    this.data = {};\n    this.messages = [];\n    this.history = [];\n    this.cwd = proc.cwd();\n    this.value;\n    this.stored;\n    this.result;\n    this.map;\n    let index2 = -1;\n    while (++index2 < order.length) {\n      const prop2 = order[index2];\n      if (prop2 in options && options[prop2] !== void 0) {\n        this[prop2] = prop2 === \"history\" ? [...options[prop2]] : options[prop2];\n      }\n    }\n    let prop;\n    for (prop in options) {\n      if (!order.includes(prop))\n        this[prop] = options[prop];\n    }\n  }\n  get path() {\n    return this.history[this.history.length - 1];\n  }\n  set path(path2) {\n    if (isUrl(path2)) {\n      path2 = urlToPath(path2);\n    }\n    assertNonEmpty(path2, \"path\");\n    if (this.path !== path2) {\n      this.history.push(path2);\n    }\n  }\n  get dirname() {\n    return typeof this.path === \"string\" ? path.dirname(this.path) : void 0;\n  }\n  set dirname(dirname2) {\n    assertPath(this.basename, \"dirname\");\n    this.path = path.join(dirname2 || \"\", this.basename);\n  }\n  get basename() {\n    return typeof this.path === \"string\" ? path.basename(this.path) : void 0;\n  }\n  set basename(basename2) {\n    assertNonEmpty(basename2, \"basename\");\n    assertPart(basename2, \"basename\");\n    this.path = path.join(this.dirname || \"\", basename2);\n  }\n  get extname() {\n    return typeof this.path === \"string\" ? path.extname(this.path) : void 0;\n  }\n  set extname(extname2) {\n    assertPart(extname2, \"extname\");\n    assertPath(this.dirname, \"extname\");\n    if (extname2) {\n      if (extname2.charCodeAt(0) !== 46) {\n        throw new Error(\"`extname` must start with `.`\");\n      }\n      if (extname2.includes(\".\", 1)) {\n        throw new Error(\"`extname` cannot contain multiple dots\");\n      }\n    }\n    this.path = path.join(this.dirname, this.stem + (extname2 || \"\"));\n  }\n  get stem() {\n    return typeof this.path === \"string\" ? path.basename(this.path, this.extname) : void 0;\n  }\n  set stem(stem) {\n    assertNonEmpty(stem, \"stem\");\n    assertPart(stem, \"stem\");\n    this.path = path.join(this.dirname || \"\", stem + (this.extname || \"\"));\n  }\n  toString(encoding) {\n    return (this.value || \"\").toString(encoding);\n  }\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin);\n    if (this.path) {\n      message.name = this.path + \":\" + message.name;\n      message.file = this.path;\n    }\n    message.fatal = false;\n    this.messages.push(message);\n    return message;\n  }\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin);\n    message.fatal = null;\n    return message;\n  }\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin);\n    message.fatal = true;\n    throw message;\n  }\n}\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\"`\" + name + \"` cannot be a path: did not expect `\" + path.sep + \"`\");\n  }\n}\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error(\"`\" + name + \"` cannot be empty\");\n  }\n}\nfunction assertPath(path2, name) {\n  if (!path2) {\n    throw new Error(\"Setting `\" + name + \"` requires `path` to be set too\");\n  }\n}\nconst unified = base().freeze();\nconst own$1 = {}.hasOwnProperty;\nfunction base() {\n  const transformers = trough();\n  const attachers = [];\n  let namespace = {};\n  let frozen;\n  let freezeIndex = -1;\n  processor.data = data;\n  processor.Parser = void 0;\n  processor.Compiler = void 0;\n  processor.freeze = freeze;\n  processor.attachers = attachers;\n  processor.use = use;\n  processor.parse = parse;\n  processor.stringify = stringify;\n  processor.run = run;\n  processor.runSync = runSync;\n  processor.process = process;\n  processor.processSync = processSync;\n  return processor;\n  function processor() {\n    const destination = base();\n    let index2 = -1;\n    while (++index2 < attachers.length) {\n      destination.use(...attachers[index2]);\n    }\n    destination.data(extend(true, {}, namespace));\n    return destination;\n  }\n  function data(key, value) {\n    if (typeof key === \"string\") {\n      if (arguments.length === 2) {\n        assertUnfrozen(\"data\", frozen);\n        namespace[key] = value;\n        return processor;\n      }\n      return own$1.call(namespace, key) && namespace[key] || null;\n    }\n    if (key) {\n      assertUnfrozen(\"data\", frozen);\n      namespace = key;\n      return processor;\n    }\n    return namespace;\n  }\n  function freeze() {\n    if (frozen) {\n      return processor;\n    }\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex];\n      if (options[0] === false) {\n        continue;\n      }\n      if (options[0] === true) {\n        options[1] = void 0;\n      }\n      const transformer = attacher.call(processor, ...options);\n      if (typeof transformer === \"function\") {\n        transformers.use(transformer);\n      }\n    }\n    frozen = true;\n    freezeIndex = Number.POSITIVE_INFINITY;\n    return processor;\n  }\n  function use(value, ...options) {\n    let settings;\n    assertUnfrozen(\"use\", frozen);\n    if (value === null || value === void 0)\n      ;\n    else if (typeof value === \"function\") {\n      addPlugin(value, ...options);\n    } else if (typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        addList(value);\n      } else {\n        addPreset(value);\n      }\n    } else {\n      throw new TypeError(\"Expected usable value, not `\" + value + \"`\");\n    }\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings);\n    }\n    return processor;\n    function add(value2) {\n      if (typeof value2 === \"function\") {\n        addPlugin(value2);\n      } else if (typeof value2 === \"object\") {\n        if (Array.isArray(value2)) {\n          const [plugin, ...options2] = value2;\n          addPlugin(plugin, ...options2);\n        } else {\n          addPreset(value2);\n        }\n      } else {\n        throw new TypeError(\"Expected usable value, not `\" + value2 + \"`\");\n      }\n    }\n    function addPreset(result) {\n      addList(result.plugins);\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings);\n      }\n    }\n    function addList(plugins) {\n      let index2 = -1;\n      if (plugins === null || plugins === void 0)\n        ;\n      else if (Array.isArray(plugins)) {\n        while (++index2 < plugins.length) {\n          const thing = plugins[index2];\n          add(thing);\n        }\n      } else {\n        throw new TypeError(\"Expected a list of plugins, not `\" + plugins + \"`\");\n      }\n    }\n    function addPlugin(plugin, value2) {\n      let index2 = -1;\n      let entry;\n      while (++index2 < attachers.length) {\n        if (attachers[index2][0] === plugin) {\n          entry = attachers[index2];\n          break;\n        }\n      }\n      if (entry) {\n        if (isPlainObject2(entry[1]) && isPlainObject2(value2)) {\n          value2 = extend(true, entry[1], value2);\n        }\n        entry[1] = value2;\n      } else {\n        attachers.push([...arguments]);\n      }\n    }\n  }\n  function parse(doc) {\n    processor.freeze();\n    const file = vfile(doc);\n    const Parser = processor.Parser;\n    assertParser(\"parse\", Parser);\n    if (newable(Parser, \"parse\")) {\n      return new Parser(String(file), file).parse();\n    }\n    return Parser(String(file), file);\n  }\n  function stringify(node, doc) {\n    processor.freeze();\n    const file = vfile(doc);\n    const Compiler2 = processor.Compiler;\n    assertCompiler(\"stringify\", Compiler2);\n    assertNode(node);\n    if (newable(Compiler2, \"compile\")) {\n      return new Compiler2(node, file).compile();\n    }\n    return Compiler2(node, file);\n  }\n  function run(node, doc, callback) {\n    assertNode(node);\n    processor.freeze();\n    if (!callback && typeof doc === \"function\") {\n      callback = doc;\n      doc = void 0;\n    }\n    if (!callback) {\n      return new Promise(executor);\n    }\n    executor(null, callback);\n    function executor(resolve, reject) {\n      transformers.run(node, vfile(doc), done);\n      function done(error, tree, file) {\n        tree = tree || node;\n        if (error) {\n          reject(error);\n        } else if (resolve) {\n          resolve(tree);\n        } else {\n          callback(null, tree, file);\n        }\n      }\n    }\n  }\n  function runSync(node, file) {\n    let result;\n    let complete;\n    processor.run(node, file, done);\n    assertDone(\"runSync\", \"run\", complete);\n    return result;\n    function done(error, tree) {\n      bail(error);\n      result = tree;\n      complete = true;\n    }\n  }\n  function process(doc, callback) {\n    processor.freeze();\n    assertParser(\"process\", processor.Parser);\n    assertCompiler(\"process\", processor.Compiler);\n    if (!callback) {\n      return new Promise(executor);\n    }\n    executor(null, callback);\n    function executor(resolve, reject) {\n      const file = vfile(doc);\n      processor.run(processor.parse(file), file, (error, tree, file2) => {\n        if (error || !tree || !file2) {\n          done(error);\n        } else {\n          const result = processor.stringify(tree, file2);\n          if (result === void 0 || result === null)\n            ;\n          else if (looksLikeAVFileValue(result)) {\n            file2.value = result;\n          } else {\n            file2.result = result;\n          }\n          done(error, file2);\n        }\n      });\n      function done(error, file2) {\n        if (error || !file2) {\n          reject(error);\n        } else if (resolve) {\n          resolve(file2);\n        } else {\n          callback(null, file2);\n        }\n      }\n    }\n  }\n  function processSync(doc) {\n    let complete;\n    processor.freeze();\n    assertParser(\"processSync\", processor.Parser);\n    assertCompiler(\"processSync\", processor.Compiler);\n    const file = vfile(doc);\n    processor.process(file, done);\n    assertDone(\"processSync\", \"process\", complete);\n    return file;\n    function done(error) {\n      complete = true;\n      bail(error);\n    }\n  }\n}\nfunction newable(value, name) {\n  return typeof value === \"function\" && value.prototype && (keys(value.prototype) || name in value.prototype);\n}\nfunction keys(value) {\n  let key;\n  for (key in value) {\n    if (own$1.call(value, key)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction assertParser(name, value) {\n  if (typeof value !== \"function\") {\n    throw new TypeError(\"Cannot `\" + name + \"` without `Parser`\");\n  }\n}\nfunction assertCompiler(name, value) {\n  if (typeof value !== \"function\") {\n    throw new TypeError(\"Cannot `\" + name + \"` without `Compiler`\");\n  }\n}\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\"Cannot call `\" + name + \"` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.\");\n  }\n}\nfunction assertNode(node) {\n  if (!isPlainObject2(node) || typeof node.type !== \"string\") {\n    throw new TypeError(\"Expected node, got `\" + node + \"`\");\n  }\n}\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\"`\" + name + \"` finished async. Use `\" + asyncName + \"` instead\");\n  }\n}\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value);\n}\nfunction looksLikeAVFile(value) {\n  return Boolean(value && typeof value === \"object\" && \"message\" in value && \"messages\" in value);\n}\nfunction looksLikeAVFileValue(value) {\n  return typeof value === \"string\" || isBuffer(value);\n}\nfunction unherit(Super) {\n  const Of = class extends Super {\n  };\n  const proto = Of.prototype;\n  let key;\n  for (key in proto) {\n    const value = proto[key];\n    if (value && typeof value === \"object\") {\n      proto[key] = \"concat\" in value ? value.concat() : Object.assign({}, value);\n    }\n  }\n  return Of;\n}\nvar nlcstToString_1 = nlcstToString;\nfunction nlcstToString(node, separator) {\n  var sep = separator || \"\";\n  var values;\n  var length;\n  var children;\n  if (!node || !(\"length\" in node) && !node.type) {\n    throw new Error(\"Expected node, not `\" + node + \"`\");\n  }\n  if (typeof node.value === \"string\") {\n    return node.value;\n  }\n  children = \"length\" in node ? node : node.children;\n  length = children.length;\n  if (length === 1 && \"value\" in children[0]) {\n    return children[0].value;\n  }\n  values = [];\n  while (length--) {\n    values[length] = nlcstToString(children[length], sep);\n  }\n  return values.join(sep);\n}\nvar arrayIterate = iterate$1;\nvar own = {}.hasOwnProperty;\nfunction iterate$1(values, callback, context) {\n  var index2 = -1;\n  var result;\n  if (!values) {\n    throw new Error(\"Iterate requires that |this| not be \" + values);\n  }\n  if (!own.call(values, \"length\")) {\n    throw new Error(\"Iterate requires that |this| has a `length`\");\n  }\n  if (typeof callback !== \"function\") {\n    throw new Error(\"`callback` must be a function\");\n  }\n  while (++index2 < values.length) {\n    if (!(index2 in values)) {\n      continue;\n    }\n    result = callback.call(context, values[index2], index2, values);\n    if (typeof result === \"number\") {\n      if (result < 0) {\n        index2 = 0;\n      }\n      index2 = result - 1;\n    }\n  }\n}\nvar iterate = arrayIterate;\nvar unistUtilModifyChildren = modifierFactory;\nfunction modifierFactory(callback) {\n  return iteratorFactory(wrapperFactory(callback));\n}\nfunction iteratorFactory(callback) {\n  return iterator;\n  function iterator(parent) {\n    var children = parent && parent.children;\n    if (!children) {\n      throw new Error(\"Missing children in `parent` for `modifier`\");\n    }\n    iterate(children, callback, parent);\n  }\n}\nfunction wrapperFactory(callback) {\n  return wrapper;\n  function wrapper(value, index2) {\n    return callback(value, index2, this);\n  }\n}\nvar modifyChildren = unistUtilModifyChildren;\nvar mergeInitialWordSymbol = modifyChildren(function(child, index2, parent) {\n  var children;\n  var next;\n  if (child.type !== \"SymbolNode\" && child.type !== \"PunctuationNode\" || nlcstToString_1(child) !== \"&\") {\n    return;\n  }\n  children = parent.children;\n  next = children[index2 + 1];\n  if (index2 > 0 && children[index2 - 1].type === \"WordNode\" || !(next && next.type === \"WordNode\")) {\n    return;\n  }\n  children.splice(index2, 1);\n  next.children.unshift(child);\n  if (next.position && child.position) {\n    next.position.start = child.position.start;\n  }\n  return index2 - 1;\n});\nvar mergeFinalWordSymbol = modifyChildren(function(child, index2, parent) {\n  var children;\n  var previous;\n  var next;\n  if (index2 > 0 && (child.type === \"SymbolNode\" || child.type === \"PunctuationNode\") && nlcstToString_1(child) === \"-\") {\n    children = parent.children;\n    previous = children[index2 - 1];\n    next = children[index2 + 1];\n    if ((!next || next.type !== \"WordNode\") && previous && previous.type === \"WordNode\") {\n      children.splice(index2, 1);\n      previous.children.push(child);\n      if (previous.position && child.position) {\n        previous.position.end = child.position.end;\n      }\n      return index2;\n    }\n  }\n});\nvar affixSymbol = /^([!\"').?\\u00BB\\u0F3B\\u0F3D\\u169C\\u2019\\u201D\\u2026\\u203A\\u203D\\u2046\\u207E\\u208E\\u2309\\u230B\\u232A\\u2769\\u276B\\u276D\\u276F\\u2771\\u2773\\u2775\\u27C6\\u27E7\\u27E9\\u27EB\\u27ED\\u27EF\\u2984\\u2986\\u2988\\u298A\\u298C\\u298E\\u2990\\u2992\\u2994\\u2996\\u2998\\u29D9\\u29DB\\u29FD\\u2E03\\u2E05\\u2E0A\\u2E0D\\u2E1D\\u2E21\\u2E23\\u2E25\\u2E27\\u2E29\\u3009\\u300B\\u300D\\u300F\\u3011\\u3015\\u3017\\u3019\\u301B\\u301E\\u301F\\uFD3E\\uFE18\\uFE36\\uFE38\\uFE3A\\uFE3C\\uFE3E\\uFE40\\uFE42\\uFE44\\uFE48\\uFE5A\\uFE5C\\uFE5E\\uFF09\\uFF3D\\uFF5D\\uFF60\\uFF63\\]}])\\1*$/;\nvar newLine = /^[ \\t]*((\\r?\\n|\\r)[\\t ]*)+$/;\nvar newLineMulti = /^[ \\t]*((\\r?\\n|\\r)[\\t ]*){2,}$/;\nvar terminalMarker = /^([!.?\\u2026\\u203D]+)$/;\nvar wordSymbolInner = /^([&'\\-.:=?@\\u00AD\\u00B7\\u2010\\u2011\\u2019\\u2027]|_+)$/;\nvar numerical = /^(?:[\\d\\u00B2\\u00B3\\u00B9\\u00BC-\\u00BE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D58-\\u0D5E\\u0D66-\\u0D78\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19]|\\uD800[\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD801[\\uDCA0-\\uDCA9]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE48\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD803[\\uDCFA-\\uDCFF\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDF1D-\\uDF26\\uDF51-\\uDF54\\uDFC5-\\uDFCB]|\\uD804[\\uDC52-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDDE1-\\uDDF4\\uDEF0-\\uDEF9]|\\uD805[\\uDC50-\\uDC59\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF3B]|\\uD806[\\uDCE0-\\uDCF2\\uDD50-\\uDD59]|\\uD807[\\uDC50-\\uDC6C\\uDD50-\\uDD59\\uDDA0-\\uDDA9\\uDFC0-\\uDFD4]|\\uD809[\\uDC00-\\uDC6E]|\\uD81A[\\uDE60-\\uDE69\\uDF50-\\uDF59\\uDF5B-\\uDF61]|\\uD81B[\\uDE80-\\uDE96]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDFCE-\\uDFFF]|\\uD838[\\uDD40-\\uDD49\\uDEF0-\\uDEF9]|\\uD83A[\\uDCC7-\\uDCCF\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9])+$/;\nvar digitStart = /^\\d/;\nvar lowerInitial = /^(?:[a-z\\u00B5\\u00DF-\\u00F6\\u00F8-\\u00FF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0560-\\u0588\\u10D0-\\u10FA\\u10FD-\\u10FF\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7AF\\uA7B5\\uA7B7\\uA7B9\\uA7BB\\uA7BD\\uA7BF\\uA7C3\\uA7C8\\uA7CA\\uA7F6\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB68\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A]|\\uD801[\\uDC28-\\uDC4F\\uDCD8-\\uDCFB]|\\uD803[\\uDCC0-\\uDCF2]|\\uD806[\\uDCC0-\\uDCDF]|\\uD81B[\\uDE60-\\uDE7F]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD83A[\\uDD22-\\uDD43])/;\nvar surrogates = /[\\uD800-\\uDFFF]/;\nvar punctuation = /[!\"'-),-/:;?[-\\]_{}\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u201F\\u2022-\\u2027\\u2032-\\u203A\\u203C-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/;\nvar word = /[\\dA-Za-z\\u00AA\\u00B2\\u00B3\\u00B5\\u00B9\\u00BA\\u00BC-\\u00BE\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u07FD\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u08D3-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D63\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F33\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1AC0\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CD0-\\u1CD2\\u1CD4-\\u1CFA\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u20D0-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA672\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA827\\uA82C\\uA830-\\uA835\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD27\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEAB\\uDEAC\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC46\\uDC52-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD44-\\uDD47\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDC9-\\uDDCC\\uDDCE-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3B-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC5E-\\uDC61\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC3A\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD35\\uDD37\\uDD38\\uDD3B-\\uDD43\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE99\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF6\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3\\uDFE4\\uDFF0\\uDFF1]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCD6\\uDD00-\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A]|\\uDB40[\\uDD00-\\uDDEF]/;\nvar whiteSpace = /[\\t-\\r \\u0085\\u00A0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\nvar mergeInnerWordSymbol = modifyChildren(function(child, index2, parent) {\n  var siblings;\n  var sibling;\n  var previous;\n  var last;\n  var position2;\n  var tokens;\n  var queue;\n  if (index2 > 0 && (child.type === \"SymbolNode\" || child.type === \"PunctuationNode\")) {\n    siblings = parent.children;\n    previous = siblings[index2 - 1];\n    if (previous && previous.type === \"WordNode\") {\n      position2 = index2 - 1;\n      tokens = [];\n      queue = [];\n      while (siblings[++position2]) {\n        sibling = siblings[position2];\n        if (sibling.type === \"WordNode\") {\n          tokens = tokens.concat(queue, sibling.children);\n          queue = [];\n        } else if ((sibling.type === \"SymbolNode\" || sibling.type === \"PunctuationNode\") && wordSymbolInner.test(nlcstToString_1(sibling))) {\n          queue.push(sibling);\n        } else {\n          break;\n        }\n      }\n      if (tokens.length > 0) {\n        if (queue.length > 0) {\n          position2 -= queue.length;\n        }\n        siblings.splice(index2, position2 - index2);\n        previous.children = previous.children.concat(tokens);\n        last = tokens[tokens.length - 1];\n        if (previous.position && last.position) {\n          previous.position.end = last.position.end;\n        }\n        return index2;\n      }\n    }\n  }\n});\nvar slash = \"/\";\nvar mergeInnerWordSlash = modifyChildren(function(child, index2, parent) {\n  var siblings = parent.children;\n  var previous;\n  var next;\n  var previousValue;\n  var nextValue;\n  var queue;\n  var tail;\n  var count;\n  previous = siblings[index2 - 1];\n  next = siblings[index2 + 1];\n  if (previous && previous.type === \"WordNode\" && (child.type === \"SymbolNode\" || child.type === \"PunctuationNode\") && nlcstToString_1(child) === slash) {\n    previousValue = nlcstToString_1(previous);\n    tail = child;\n    queue = [child];\n    count = 1;\n    if (next && next.type === \"WordNode\") {\n      nextValue = nlcstToString_1(next);\n      tail = next;\n      queue = queue.concat(next.children);\n      count++;\n    }\n    if (previousValue.length < 3 && (!nextValue || nextValue.length < 3)) {\n      previous.children = previous.children.concat(queue);\n      siblings.splice(index2, count);\n      if (previous.position && tail.position) {\n        previous.position.end = tail.position.end;\n      }\n      return index2;\n    }\n  }\n});\nvar mergeInitialisms = modifyChildren(function(child, index2, parent) {\n  var siblings;\n  var previous;\n  var children;\n  var position2;\n  var otherChild;\n  var isAllDigits;\n  var value;\n  if (index2 > 0 && nlcstToString_1(child) === \".\") {\n    siblings = parent.children;\n    previous = siblings[index2 - 1];\n    children = previous.children;\n    if (previous.type === \"WordNode\" && children && children.length !== 1 && children.length % 2 !== 0) {\n      position2 = children.length;\n      isAllDigits = true;\n      while (children[--position2]) {\n        otherChild = children[position2];\n        value = nlcstToString_1(otherChild);\n        if (position2 % 2 === 0) {\n          if (value.length > 1) {\n            return;\n          }\n          if (!numerical.test(value)) {\n            isAllDigits = false;\n          }\n        } else if (value !== \".\") {\n          if (position2 < children.length - 2) {\n            break;\n          } else {\n            return;\n          }\n        }\n      }\n      if (!isAllDigits) {\n        siblings.splice(index2, 1);\n        children.push(child);\n        if (previous.position && child.position) {\n          previous.position.end = child.position.end;\n        }\n        return index2;\n      }\n    }\n  }\n});\nvar mergeWords = modifyChildren(function(child, index2, parent) {\n  var siblings = parent.children;\n  var next;\n  if (child.type === \"WordNode\") {\n    next = siblings[index2 + 1];\n    if (next && next.type === \"WordNode\") {\n      siblings.splice(index2 + 1, 1);\n      child.children = child.children.concat(next.children);\n      if (next.position && child.position) {\n        child.position.end = next.position.end;\n      }\n      return index2;\n    }\n  }\n});\nvar unistUtilVisitChildren = visitChildren;\nfunction visitChildren(callback) {\n  return visitor;\n  function visitor(parent) {\n    var index2 = -1;\n    var children = parent && parent.children;\n    if (!children) {\n      throw new Error(\"Missing children in `parent` for `visitor`\");\n    }\n    while (++index2 in children) {\n      callback(children[index2], index2, parent);\n    }\n  }\n}\nvar visitChildren$1 = unistUtilVisitChildren;\nvar patchPosition = visitChildren$1(function(child, index2, node) {\n  var siblings = node.children;\n  if (!child.position) {\n    return;\n  }\n  if (index2 < 1 && (!node.position || !node.position.start)) {\n    patch(node);\n    node.position.start = child.position.start;\n  }\n  if (index2 === siblings.length - 1 && (!node.position || !node.position.end)) {\n    patch(node);\n    node.position.end = child.position.end;\n  }\n});\nfunction patch(node) {\n  if (!node.position) {\n    node.position = {};\n  }\n}\nvar mergeNonWordSentences = modifyChildren(function(child, index2, parent) {\n  var children = child.children;\n  var position2 = -1;\n  var previous;\n  var next;\n  while (children[++position2]) {\n    if (children[position2].type === \"WordNode\") {\n      return;\n    }\n  }\n  previous = parent.children[index2 - 1];\n  if (previous) {\n    previous.children = previous.children.concat(children);\n    parent.children.splice(index2, 1);\n    if (previous.position && child.position) {\n      previous.position.end = child.position.end;\n    }\n    return index2;\n  }\n  next = parent.children[index2 + 1];\n  if (next) {\n    next.children = children.concat(next.children);\n    if (next.position && child.position) {\n      next.position.start = child.position.start;\n    }\n    parent.children.splice(index2, 1);\n  }\n});\nvar mergeAffixSymbol = modifyChildren(function(child, index2, parent) {\n  var children = child.children;\n  var first;\n  var second;\n  var previous;\n  if (children && children.length > 0 && index2 > 0) {\n    first = children[0];\n    second = children[1];\n    previous = parent.children[index2 - 1];\n    if ((first.type === \"SymbolNode\" || first.type === \"PunctuationNode\") && affixSymbol.test(nlcstToString_1(first))) {\n      previous.children.push(children.shift());\n      if (first.position && previous.position) {\n        previous.position.end = first.position.end;\n      }\n      if (second && second.position && child.position) {\n        child.position.start = second.position.start;\n      }\n      return index2 - 1;\n    }\n  }\n});\nvar mergeInitialLowerCaseLetterSentences = modifyChildren(function(child, index2, parent) {\n  var children = child.children;\n  var position2;\n  var node;\n  var siblings;\n  var previous;\n  if (children && children.length > 0 && index2 > 0) {\n    position2 = -1;\n    while (children[++position2]) {\n      node = children[position2];\n      if (node.type === \"WordNode\") {\n        if (!lowerInitial.test(nlcstToString_1(node))) {\n          return;\n        }\n        siblings = parent.children;\n        previous = siblings[index2 - 1];\n        previous.children = previous.children.concat(children);\n        siblings.splice(index2, 1);\n        if (previous.position && child.position) {\n          previous.position.end = child.position.end;\n        }\n        return index2;\n      }\n      if (node.type === \"SymbolNode\" || node.type === \"PunctuationNode\") {\n        return;\n      }\n    }\n  }\n});\nvar mergeInitialDigitSentences = modifyChildren(function(child, index2, parent) {\n  var children = child.children;\n  var siblings = parent.children;\n  var previous = siblings[index2 - 1];\n  var head = children[0];\n  if (previous && head && head.type === \"WordNode\" && digitStart.test(nlcstToString_1(head))) {\n    previous.children = previous.children.concat(children);\n    siblings.splice(index2, 1);\n    if (previous.position && child.position) {\n      previous.position.end = child.position.end;\n    }\n    return index2;\n  }\n});\nvar abbreviationPrefix = new RegExp(\"^([0-9]{1,3}|[a-z]|al|ca|cap|cca|cent|cf|cit|con|cp|cwt|ead|etc|ff|fl|ibid|id|nem|op|pro|seq|sic|stat|tem|viz)$\");\nvar mergePrefixExceptions = modifyChildren(function(child, index2, parent) {\n  var children = child.children;\n  var period;\n  var node;\n  var next;\n  if (children && children.length > 1) {\n    period = children[children.length - 1];\n    if (period && nlcstToString_1(period) === \".\") {\n      node = children[children.length - 2];\n      if (node && node.type === \"WordNode\" && abbreviationPrefix.test(nlcstToString_1(node).toLowerCase())) {\n        node.children.push(period);\n        children.pop();\n        if (period.position && node.position) {\n          node.position.end = period.position.end;\n        }\n        next = parent.children[index2 + 1];\n        if (next) {\n          child.children = children.concat(next.children);\n          parent.children.splice(index2 + 1, 1);\n          if (next.position && child.position) {\n            child.position.end = next.position.end;\n          }\n          return index2 - 1;\n        }\n      }\n    }\n  }\n});\nvar mergeAffixExceptions = modifyChildren(function(child, index2, parent) {\n  var children = child.children;\n  var node;\n  var position2;\n  var value;\n  var previousChild;\n  if (!children || children.length === 0 || index2 < 1) {\n    return;\n  }\n  position2 = -1;\n  while (children[++position2]) {\n    node = children[position2];\n    if (node.type === \"WordNode\") {\n      return;\n    }\n    if (node.type === \"SymbolNode\" || node.type === \"PunctuationNode\") {\n      value = nlcstToString_1(node);\n      if (value !== \",\" && value !== \";\") {\n        return;\n      }\n      previousChild = parent.children[index2 - 1];\n      previousChild.children = previousChild.children.concat(children);\n      if (previousChild.position && child.position) {\n        previousChild.position.end = child.position.end;\n      }\n      parent.children.splice(index2, 1);\n      return index2;\n    }\n  }\n});\nvar mergeRemainingFullStops = visitChildren$1(function(child) {\n  var children = child.children;\n  var position2 = children.length;\n  var hasFoundDelimiter = false;\n  var grandchild;\n  var previous;\n  var next;\n  var nextNext;\n  while (children[--position2]) {\n    grandchild = children[position2];\n    if (grandchild.type !== \"SymbolNode\" && grandchild.type !== \"PunctuationNode\") {\n      if (grandchild.type === \"WordNode\") {\n        hasFoundDelimiter = true;\n      }\n      continue;\n    }\n    if (!terminalMarker.test(nlcstToString_1(grandchild))) {\n      continue;\n    }\n    if (!hasFoundDelimiter) {\n      hasFoundDelimiter = true;\n      continue;\n    }\n    if (nlcstToString_1(grandchild) !== \".\") {\n      continue;\n    }\n    previous = children[position2 - 1];\n    next = children[position2 + 1];\n    if (previous && previous.type === \"WordNode\") {\n      nextNext = children[position2 + 2];\n      if (next && nextNext && next.type === \"WhiteSpaceNode\" && nlcstToString_1(nextNext) === \".\") {\n        continue;\n      }\n      children.splice(position2, 1);\n      previous.children.push(grandchild);\n      if (grandchild.position && previous.position) {\n        previous.position.end = grandchild.position.end;\n      }\n      position2--;\n    } else if (next && next.type === \"WordNode\") {\n      children.splice(position2, 1);\n      next.children.unshift(grandchild);\n      if (grandchild.position && next.position) {\n        next.position.start = grandchild.position.start;\n      }\n    }\n  }\n});\nvar makeInitialWhiteSpaceSiblings = visitChildren$1(function(child, index2, parent) {\n  var children = child.children;\n  var next;\n  if (children && children.length > 0 && children[0].type === \"WhiteSpaceNode\") {\n    parent.children.splice(index2, 0, children.shift());\n    next = children[0];\n    if (next && next.position && child.position) {\n      child.position.start = next.position.start;\n    }\n  }\n});\nvar makeFinalWhiteSpaceSiblings = modifyChildren(function(child, index2, parent) {\n  var children = child.children;\n  var previous;\n  if (children && children.length > 0 && children[children.length - 1].type === \"WhiteSpaceNode\") {\n    parent.children.splice(index2 + 1, 0, child.children.pop());\n    previous = children[children.length - 1];\n    if (previous && previous.position && child.position) {\n      child.position.end = previous.position.end;\n    }\n    return index2;\n  }\n});\nvar breakImplicitSentences = modifyChildren(function(child, index2, parent) {\n  var children;\n  var position2;\n  var tail;\n  var head;\n  var end;\n  var insertion;\n  var node;\n  if (child.type !== \"SentenceNode\") {\n    return;\n  }\n  children = child.children;\n  position2 = 0;\n  while (++position2 < children.length - 1) {\n    node = children[position2];\n    if (node.type !== \"WhiteSpaceNode\" || !newLineMulti.test(nlcstToString_1(node))) {\n      continue;\n    }\n    child.children = children.slice(0, position2);\n    insertion = {\n      type: \"SentenceNode\",\n      children: children.slice(position2 + 1)\n    };\n    tail = children[position2 - 1];\n    head = children[position2 + 1];\n    parent.children.splice(index2 + 1, 0, node, insertion);\n    if (child.position && tail.position && head.position) {\n      end = child.position.end;\n      child.position.end = tail.position.end;\n      insertion.position = { start: head.position.start, end };\n    }\n    return index2 + 1;\n  }\n});\nvar removeEmptyNodes = modifyChildren(function(child, index2, parent) {\n  if (\"children\" in child && child.children.length === 0) {\n    parent.children.splice(index2, 1);\n    return index2;\n  }\n});\nfunction tokenizerFactory(childType, expression) {\n  return tokenizer;\n  function tokenizer(node) {\n    var children = [];\n    var tokens = node.children;\n    var type = node.type;\n    var index2 = -1;\n    var lastIndex = tokens.length - 1;\n    var start = 0;\n    var first;\n    var last;\n    var parent;\n    while (++index2 < tokens.length) {\n      if (index2 === lastIndex || tokens[index2].type === childType && expression.test(nlcstToString_1(tokens[index2]))) {\n        first = tokens[start];\n        last = tokens[index2];\n        parent = { type, children: tokens.slice(start, index2 + 1) };\n        if (first.position && last.position) {\n          parent.position = {\n            start: first.position.start,\n            end: last.position.end\n          };\n        }\n        children.push(parent);\n        start = index2 + 1;\n      }\n    }\n    return children;\n  }\n}\nfunction parserFactory(options) {\n  var type = options.type;\n  var tokenizerProperty = options.tokenizer;\n  var delimiter = options.delimiter;\n  var tokenize = delimiter && tokenizerFactory(options.delimiterType, delimiter);\n  return parser;\n  function parser(value) {\n    var children = this[tokenizerProperty](value);\n    return { type, children: tokenize ? tokenize(children) : children };\n  }\n}\nclass ParseLatin {\n  constructor(doc, file) {\n    var value = file || doc;\n    this.doc = value ? String(value) : null;\n  }\n  run(key, nodes) {\n    var wareKey = key + \"Plugins\";\n    var plugins = this[wareKey];\n    var index2 = -1;\n    if (plugins) {\n      while (plugins[++index2]) {\n        plugins[index2](nodes);\n      }\n    }\n    return nodes;\n  }\n  parse(value) {\n    return this.tokenizeRoot(value || this.doc);\n  }\n  tokenize(value) {\n    var parser = this;\n    var tokens = [];\n    var index2 = 0;\n    var offset = 0;\n    var line = 1;\n    var column = 1;\n    var character;\n    var queue;\n    var previous;\n    var left;\n    var right;\n    var eater;\n    if (value === null || value === void 0) {\n      value = \"\";\n    } else if (value instanceof String) {\n      value = value.toString();\n    }\n    if (typeof value !== \"string\") {\n      if (\"length\" in value && (!value[0] || value[0].type)) {\n        return value;\n      }\n      throw new Error(\"Illegal invocation: '\" + value + \"' is not a valid argument for 'ParseLatin'\");\n    }\n    if (!value) {\n      return tokens;\n    }\n    eater = this.position ? eat : noPositionEat;\n    previous = \"\";\n    queue = \"\";\n    while (index2 < value.length) {\n      character = value.charAt(index2);\n      if (whiteSpace.test(character)) {\n        right = \"WhiteSpace\";\n      } else if (punctuation.test(character)) {\n        right = \"Punctuation\";\n      } else if (word.test(character)) {\n        right = \"Word\";\n      } else {\n        right = \"Symbol\";\n      }\n      tick();\n      previous = character;\n      character = \"\";\n      left = right;\n      right = null;\n      index2++;\n    }\n    tick();\n    return tokens;\n    function tick() {\n      if (left === right && (left === \"Word\" || left === \"WhiteSpace\" || character === previous || surrogates.test(character))) {\n        queue += character;\n      } else {\n        if (queue) {\n          parser[\"tokenize\" + left](queue, eater);\n        }\n        queue = character;\n      }\n    }\n    function eat(subvalue) {\n      var pos = position2();\n      update(subvalue);\n      return apply;\n      function apply(...input) {\n        return pos(add(...input));\n      }\n    }\n    function noPositionEat() {\n      return add;\n    }\n    function add(node, parent) {\n      if (parent) {\n        parent.children.push(node);\n      } else {\n        tokens.push(node);\n      }\n      return node;\n    }\n    function position2() {\n      var before = now();\n      function patch2(node) {\n        node.position = new Position(before);\n        return node;\n      }\n      return patch2;\n    }\n    function update(subvalue) {\n      var character2 = -1;\n      var lastIndex = -1;\n      offset += subvalue.length;\n      while (++character2 < subvalue.length) {\n        if (subvalue.charAt(character2) === \"\\n\") {\n          lastIndex = character2;\n          line++;\n        }\n      }\n      if (lastIndex < 0) {\n        column += subvalue.length;\n      } else {\n        column = subvalue.length - lastIndex;\n      }\n    }\n    function Position(start) {\n      this.start = start;\n      this.end = now();\n    }\n    function now() {\n      return { line, column, offset };\n    }\n  }\n}\nParseLatin.prototype.position = true;\nParseLatin.prototype.tokenizeSymbol = createTextFactory(\"Symbol\");\nParseLatin.prototype.tokenizeWhiteSpace = createTextFactory(\"WhiteSpace\");\nParseLatin.prototype.tokenizePunctuation = createTextFactory(\"Punctuation\");\nParseLatin.prototype.tokenizeSource = createTextFactory(\"Source\");\nParseLatin.prototype.tokenizeText = createTextFactory(\"Text\");\nParseLatin.prototype.use = useFactory(function(context, key, plugins) {\n  context[key] = context[key].concat(plugins);\n});\nParseLatin.prototype.useFirst = useFactory(function(context, key, plugins) {\n  context[key] = plugins.concat(context[key]);\n});\npluggable(ParseLatin, \"tokenizeWord\", function(value, eat) {\n  var add = (eat || noopEat)(\"\");\n  var parent = { type: \"WordNode\", children: [] };\n  this.tokenizeText(value, eat, parent);\n  return add(parent);\n});\npluggable(ParseLatin, \"tokenizeSentence\", parserFactory({ type: \"SentenceNode\", tokenizer: \"tokenize\" }));\npluggable(ParseLatin, \"tokenizeParagraph\", parserFactory({\n  type: \"ParagraphNode\",\n  delimiter: terminalMarker,\n  delimiterType: \"PunctuationNode\",\n  tokenizer: \"tokenizeSentence\"\n}));\npluggable(ParseLatin, \"tokenizeRoot\", parserFactory({\n  type: \"RootNode\",\n  delimiter: newLine,\n  delimiterType: \"WhiteSpaceNode\",\n  tokenizer: \"tokenizeParagraph\"\n}));\nParseLatin.prototype.use(\"tokenizeSentence\", [\n  mergeInitialWordSymbol,\n  mergeFinalWordSymbol,\n  mergeInnerWordSymbol,\n  mergeInnerWordSlash,\n  mergeInitialisms,\n  mergeWords,\n  patchPosition\n]);\nParseLatin.prototype.use(\"tokenizeParagraph\", [\n  mergeNonWordSentences,\n  mergeAffixSymbol,\n  mergeInitialLowerCaseLetterSentences,\n  mergeInitialDigitSentences,\n  mergePrefixExceptions,\n  mergeAffixExceptions,\n  mergeRemainingFullStops,\n  makeInitialWhiteSpaceSiblings,\n  makeFinalWhiteSpaceSiblings,\n  breakImplicitSentences,\n  removeEmptyNodes,\n  patchPosition\n]);\nParseLatin.prototype.use(\"tokenizeRoot\", [\n  makeInitialWhiteSpaceSiblings,\n  makeFinalWhiteSpaceSiblings,\n  removeEmptyNodes,\n  patchPosition\n]);\nfunction createTextFactory(type) {\n  type += \"Node\";\n  return createText;\n  function createText(value, eat, parent) {\n    if (value === null || value === void 0) {\n      value = \"\";\n    }\n    return (eat || noopEat)(value)({ type, value: String(value) }, parent);\n  }\n}\nfunction pluggable(Constructor, key, callback) {\n  Constructor.prototype[key] = function(...input) {\n    return this.run(key, callback.apply(this, input));\n  };\n}\nfunction useFactory(callback) {\n  return use;\n  function use(key, plugins) {\n    var wareKey;\n    if (!(key in this)) {\n      throw new Error(\"Illegal Invocation: Unsupported `key` for `use(key, plugins)`. Make sure `key` is a supported function\");\n    }\n    if (!plugins) {\n      return;\n    }\n    wareKey = key + \"Plugins\";\n    plugins = typeof plugins === \"function\" ? [plugins] : plugins.concat();\n    if (!this[wareKey]) {\n      this[wareKey] = [];\n    }\n    callback(this, wareKey, plugins);\n  }\n}\nfunction noopAdd(node, parent) {\n  if (parent) {\n    parent.children.push(node);\n  }\n  return node;\n}\nfunction noopEat() {\n  return noopAdd;\n}\nfunction retextLatin() {\n  Object.assign(this, { Parser: unherit(ParseLatin) });\n}\nfunction toString(node, separator = \"\") {\n  let index2 = -1;\n  if (!node || !Array.isArray(node) && !node.type) {\n    throw new Error(\"Expected node, not `\" + node + \"`\");\n  }\n  if (typeof node.value === \"string\")\n    return node.value;\n  const children = (Array.isArray(node) ? node : node.children) || [];\n  if (children.length === 1 && \"value\" in children[0]) {\n    return children[0].value;\n  }\n  const values = [];\n  while (++index2 < children.length) {\n    values[index2] = toString(children[index2], separator);\n  }\n  return values.join(separator);\n}\nfunction retextStringify() {\n  Object.assign(this, { Compiler });\n}\nfunction Compiler(tree) {\n  return toString(tree);\n}\nconst retext = unified().use(retextLatin).use(retextStringify).freeze();\nconst convert = function(test) {\n  if (test === void 0 || test === null) {\n    return ok;\n  }\n  if (typeof test === \"string\") {\n    return typeFactory(test);\n  }\n  if (typeof test === \"object\") {\n    return Array.isArray(test) ? anyFactory(test) : propsFactory(test);\n  }\n  if (typeof test === \"function\") {\n    return castFactory(test);\n  }\n  throw new Error(\"Expected function, string, or object as test\");\n};\nfunction anyFactory(tests) {\n  const checks = [];\n  let index2 = -1;\n  while (++index2 < tests.length) {\n    checks[index2] = convert(tests[index2]);\n  }\n  return castFactory(any);\n  function any(...parameters) {\n    let index3 = -1;\n    while (++index3 < checks.length) {\n      if (checks[index3].call(this, ...parameters))\n        return true;\n    }\n    return false;\n  }\n}\nfunction propsFactory(check) {\n  return castFactory(all);\n  function all(node) {\n    let key;\n    for (key in check) {\n      if (node[key] !== check[key])\n        return false;\n    }\n    return true;\n  }\n}\nfunction typeFactory(check) {\n  return castFactory(type);\n  function type(node) {\n    return node && node.type === check;\n  }\n}\nfunction castFactory(check) {\n  return assertion;\n  function assertion(...parameters) {\n    return Boolean(check.call(this, ...parameters));\n  }\n}\nfunction ok() {\n  return true;\n}\nfunction color(d) {\n  return d;\n}\nconst CONTINUE = true;\nconst SKIP = \"skip\";\nconst EXIT = false;\nconst visitParents = function(tree, test, visitor, reverse) {\n  if (typeof test === \"function\" && typeof visitor !== \"function\") {\n    reverse = visitor;\n    visitor = test;\n    test = null;\n  }\n  const is = convert(test);\n  const step = reverse ? -1 : 1;\n  factory(tree, null, [])();\n  function factory(node, index2, parents) {\n    const value = typeof node === \"object\" && node !== null ? node : {};\n    let name;\n    if (typeof value.type === \"string\") {\n      name = typeof value.tagName === \"string\" ? value.tagName : typeof value.name === \"string\" ? value.name : void 0;\n      Object.defineProperty(visit2, \"name\", {\n        value: \"node (\" + color(value.type + (name ? \"<\" + name + \">\" : \"\")) + \")\"\n      });\n    }\n    return visit2;\n    function visit2() {\n      let result = [];\n      let subresult;\n      let offset;\n      let grandparents;\n      if (!test || is(node, index2, parents[parents.length - 1] || null)) {\n        result = toResult(visitor(node, parents));\n        if (result[0] === EXIT) {\n          return result;\n        }\n      }\n      if (node.children && result[0] !== SKIP) {\n        offset = (reverse ? node.children.length : -1) + step;\n        grandparents = parents.concat(node);\n        while (offset > -1 && offset < node.children.length) {\n          subresult = factory(node.children[offset], offset, grandparents)();\n          if (subresult[0] === EXIT) {\n            return subresult;\n          }\n          offset = typeof subresult[1] === \"number\" ? subresult[1] : offset + step;\n        }\n      }\n      return result;\n    }\n  }\n};\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n  if (typeof value === \"number\") {\n    return [CONTINUE, value];\n  }\n  return [value];\n}\nconst visit = function(tree, test, visitor, reverse) {\n  if (typeof test === \"function\" && typeof visitor !== \"function\") {\n    reverse = visitor;\n    visitor = test;\n    test = null;\n  }\n  visitParents(tree, test, overload, reverse);\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1];\n    return visitor(node, parent ? parent.children.indexOf(node) : null, parent);\n  }\n};\nconst TRANSLATIONAL_MARK = \"/\";\nlet stopConvert = false;\nfunction handleBoundaryNode(node, index2, parent) {\n  if (node.type !== \"PunctuationNode\" && node.type !== \"SymbolNode\")\n    return;\n  if (node.value !== TRANSLATIONAL_MARK)\n    return;\n  if (index2 > 0) {\n    const preNode = parent.children[index2 - 1];\n    if ((preNode == null ? void 0 : preNode.value) && preNode.value === \"<\") {\n      return;\n    }\n  }\n  stopConvert = !stopConvert;\n  node.value = \"\";\n}\nfunction handleChildrenNode(node, converter, index2, parent) {\n  if (node.type === \"WhiteSpaceNode\")\n    return node;\n  if (node.type === \"PunctuationNode\")\n    handleBoundaryNode(node, index2, parent);\n  if (!stopConvert && (node == null ? void 0 : node.value)) {\n    node.value = converter(node.value);\n  }\n  if (!(node == null ? void 0 : node.children))\n    return node;\n  node.children.forEach((childNode, i) => {\n    handleChildrenNode(childNode, converter, i, node);\n  });\n  return node;\n}\nfunction TextConverter(converter) {\n  stopConvert = false;\n  return (tree) => {\n    visit(tree, \"SentenceNode\", (node, index2, parent) => {\n      handleChildrenNode(node, converter, index2, parent);\n    });\n  };\n}\nfunction escapeSpecialCharacters(specialChars) {\n  const regex = /[\\^\\$\\.\\*\\+\\?\\|\\\\\\/\\[\\]\\{\\}\\=\\!\\:\\-\\,\\(\\)]/gi;\n  const match = specialChars.match(regex);\n  if (match) {\n    for (let item of match) {\n      specialChars = specialChars.replace(new RegExp(`\\\\${item}`, \"gi\"), `\\\\${item}`);\n    }\n  }\n  return specialChars;\n}\nfunction replaceAll(str, target, replacement) {\n  target = escapeSpecialCharacters(target);\n  return str.replace(new RegExp(target, \"ig\"), replacement);\n}\nclass Base {\n  constructor(table2, hemze = \"x\") {\n    __publicField$1(this, \"type\");\n    this.table = table2;\n    this.hemze = hemze;\n  }\n  orderedTable() {\n    return this.table.sort((a, b) => {\n      var _a, _b;\n      return ((_a = b[this.type]) == null ? void 0 : _a.length) - ((_b = a[this.type]) == null ? void 0 : _b.length);\n    });\n  }\n  getMap() {\n    const kvmap = {};\n    this.orderedTable().forEach((item) => kvmap[item[this.type]] = item.ug);\n    return kvmap;\n  }\n  fromUg(uword) {\n    Object.entries(this.getMap()).forEach(([key, value]) => uword = replaceAll(uword, value, key));\n    return uword;\n  }\n  toUg(word2) {\n    Object.entries(this.getMap()).forEach(([key, value]) => word2 = replaceAll(word2, key, value));\n    const volwes2 = this.table.filter((item) => item.volwes).map((item) => item.ug);\n    return volwes2.includes(word2[0]) ? this.hemze + word2 : word2;\n  }\n  toUgText(text) {\n    return retext().use(TextConverter, (word2) => this.toUg(word2)).processSync(text).value.toString();\n  }\n}\nclass Khan extends Base {\n  constructor() {\n    super(...arguments);\n    __publicField$1(this, \"type\", \"khan\");\n  }\n  fromUg(uword) {\n    uword = replaceAll(uword, \"\\u0646\\u06AF\", \"\\u0646h\\u06AF\");\n    let word2 = super.fromUg(uword);\n    word2 = replaceAll(word2, \"nh\", \"n\");\n    const hemze = this.table.filter((item) => item.ug === this.hemze)[0].khan;\n    if (word2 && word2[0] === hemze) {\n      word2 = word2.slice(1, word2.length);\n    }\n    return word2;\n  }\n}\nclass Uly extends Base {\n  constructor() {\n    super(...arguments);\n    __publicField$1(this, \"type\", \"uly\");\n  }\n}\nconst khan = new Khan(table$1, HEMZE);\nfunction ug2khan(word2) {\n  return khan.fromUg(word2);\n}\nfunction khan2ug(word2) {\n  return khan.toUg(word2);\n}\nfunction khanText2ug(text) {\n  return khan.toUgText(text);\n}\nconst uly = new Uly(table$1, HEMZE);\nfunction ug2uly(word2) {\n  return uly.fromUg(word2);\n}\nfunction uly2ug(word2) {\n  return uly.toUg(word2);\n}\nfunction ulyText2ug(text) {\n  return uly.toUgText(text);\n}\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nconst BOUND_FLAG = String.fromCharCode(0);\nconst table = [\n  {\n    uchar: \"\\u0626\",\n    volwes: false,\n    uly: BOUND_FLAG,\n    khan: \"?\"\n  },\n  {\n    uchar: \"\\u0627\",\n    volwes: true,\n    uly: \"a\",\n    khan: \"a\"\n  },\n  {\n    uchar: \"\\u06D5\",\n    volwes: true,\n    uly: \"e\",\n    khan: \"e\"\n  },\n  {\n    uchar: \"\\u06D0\",\n    volwes: true,\n    uly: \"\\xEB\",\n    khan: \"eh\"\n  },\n  {\n    uchar: \"\\u0649\",\n    volwes: true,\n    uly: \"i\",\n    khan: \"i\"\n  },\n  {\n    uchar: \"\\u0648\",\n    volwes: true,\n    uly: \"o\",\n    khan: \"o\"\n  },\n  {\n    uchar: \"\\u06C7\",\n    volwes: true,\n    uly: \"u\",\n    khan: \"u\"\n  },\n  {\n    uchar: \"\\u06C6\",\n    volwes: true,\n    uly: \"\\xF6\",\n    khan: \"c\"\n  },\n  {\n    uchar: \"\\u06C8\",\n    volwes: true,\n    uly: \"\\xFC\",\n    khan: \"v\"\n  },\n  {\n    uchar: \"\\u0628\",\n    volwes: false,\n    uly: \"b\",\n    khan: \"b\"\n  },\n  {\n    uchar: \"\\u067E\",\n    volwes: false,\n    uly: \"p\",\n    khan: \"p\"\n  },\n  {\n    uchar: \"\\u062A\",\n    volwes: false,\n    uly: \"t\",\n    khan: \"t\"\n  },\n  {\n    uchar: \"\\u062C\",\n    volwes: false,\n    uly: \"j\",\n    khan: \"j\"\n  },\n  {\n    uchar: \"\\u0686\",\n    volwes: false,\n    uly: \"ch\",\n    khan: \"ch\"\n  },\n  {\n    uchar: \"\\u062E\",\n    volwes: false,\n    uly: \"x\",\n    khan: \"kh\"\n  },\n  {\n    uchar: \"\\u062F\",\n    volwes: false,\n    uly: \"d\",\n    khan: \"d\"\n  },\n  {\n    uchar: \"\\u0631\",\n    volwes: false,\n    uly: \"r\",\n    khan: \"r\"\n  },\n  {\n    uchar: \"\\u0632\",\n    volwes: false,\n    uly: \"z\",\n    khan: \"z\"\n  },\n  {\n    uchar: \"\\u0698\",\n    volwes: false,\n    uly: \"zh\",\n    khan: \"zh\"\n  },\n  {\n    uchar: \"\\u0633\",\n    volwes: false,\n    uly: \"s\",\n    khan: \"s\"\n  },\n  {\n    uchar: \"\\u0634\",\n    volwes: false,\n    uly: \"sh\",\n    khan: \"sh\"\n  },\n  {\n    uchar: \"\\u063A\",\n    volwes: false,\n    uly: \"gh\",\n    khan: \"gh\"\n  },\n  {\n    uchar: \"\\u0642\",\n    volwes: false,\n    uly: \"q\",\n    khan: \"q\"\n  },\n  {\n    uchar: \"\\u0641\",\n    volwes: false,\n    uly: \"f\",\n    khan: \"f\"\n  },\n  {\n    uchar: \"\\u0643\",\n    volwes: false,\n    uly: \"k\",\n    khan: \"k\"\n  },\n  {\n    uchar: \"\\u06AF\",\n    volwes: false,\n    uly: \"g\",\n    khan: \"g\"\n  },\n  {\n    uchar: \"\\u06AD\",\n    volwes: false,\n    uly: \"ng\",\n    khan: \"ng\"\n  },\n  {\n    uchar: \"\\u0644\",\n    volwes: false,\n    uly: \"l\",\n    khan: \"l\"\n  },\n  {\n    uchar: \"\\u0645\",\n    volwes: false,\n    uly: \"m\",\n    khan: \"m\"\n  },\n  {\n    uchar: \"\\u0646\",\n    volwes: false,\n    uly: \"n\",\n    khan: \"n\"\n  },\n  {\n    uchar: \"\\u06BE\",\n    volwes: false,\n    uly: \"h\",\n    khan: \"x\"\n  },\n  {\n    uchar: \"\\u06CB\",\n    volwes: false,\n    uly: \"w\",\n    khan: \"w\"\n  },\n  {\n    uchar: \"\\u064A\",\n    volwes: false,\n    uly: \"y\",\n    khan: \"y\"\n  }\n];\nclass Syllable {\n  constructor() {\n    __publicField(this, \"_table\");\n    this._table = table;\n  }\n  getTable() {\n    return this._table;\n  }\n  tokenize(word2) {\n    const volwes2 = this._table.filter((item) => item.volwes).map((item) => item.uchar);\n    return word2.split(\"\").map((char) => volwes2.indexOf(char) !== -1 ? 1 : 0).join(\"\");\n  }\n  tokenToGroup(token) {\n    return token.replaceAll(\"1\", \"1#\").split(\"#\");\n  }\n  groupToPositional(group) {\n    return group.reverse().map((item, index2) => {\n      if (index2 === 0 || index2 === group.length - 1)\n        return item;\n      switch (item.replace(\"1\", \"\").length) {\n        case 1:\n          return \"#\" + item;\n        case 2:\n          return [item[0], \"#\", item.slice(1, 3)].join(\"\");\n        case 3:\n          return [item[0], \"#\", item.slice(1, 3), item.slice(-1)].join(\"\");\n        case 4:\n          return [item[0], \"#\", item.slice(1, 3), \"#\", item.slice(-1)].join(\"\");\n        case 5:\n          return [item[0], \"#\", item.slice(1, 4), \"#\", item.slice(-1)].join(\"\");\n        default:\n          return item;\n      }\n    }).reverse();\n  }\n  positinalGroupToWord(positinalGroup, word2) {\n    const syllableList = [];\n    let counter = 0;\n    positinalGroup.join(\"\").split(\"\").forEach((item, index2) => {\n      if (item === \"#\") {\n        counter += 1;\n        syllableList.push(\"#\");\n        return;\n      }\n      syllableList.push(word2[index2 - counter]);\n    });\n    return syllableList.join(\"\").split(\"#\");\n  }\n  syllable(word2) {\n    const token = this.tokenize(word2);\n    let group = this.tokenToGroup(token);\n    const positionalGroup = this.groupToPositional(group);\n    const sylableWord = this.positinalGroupToWord(positionalGroup, word2);\n    return sylableWord;\n  }\n}\nfunction syllableUg(word2) {\n  return new Syllable().syllable(word2);\n}\nexport { Base as BaseConverter, HEMZE, Khan as KhanConverter, READABILITY_MARK, SEPARATE_MARK, SYLLABIFY_MARK, TRANSLATIONAL_MARK$1 as TRANSLATIONAL_MARK, Uly as UlyConverter, isVolwes, khan2ug, khanText2ug, syllableUg, table$1 as table, ug2khan, ug2uly, Syllable as ugSyllable, uly2ug, ulyText2ug, volwes };\n", "import { khanText2ug } from \"shirkhan-alphabet\";\n/**\n *\n * @param {*} md\n * @param {*} isActiveConvert \u63A7\u5236\u662F\u5426\u8F6C\u6362\u7684\u72B6\u6001\u7BA1\u7406\u5668\u56DE\u8C03\u51FD\u6570\uFF0Ctrue \u6807\u8BC6\u9700\u8981\u8F6C\u6362\uFF0Cfalse\u6807\u8BC6\u505C\u6B62\u8F6C\u6362\n * @returns\n */\nexport function shirkhanAlphabetPlugin(md, isActiveConvert) {\n  const defaultRender = md.renderer.rules.text;\n  md.renderer.rules.text = function (tokens, idx, options, env, slf) {\n    let result = defaultRender(tokens, idx, options, env, slf);\n\n    if (!isActiveConvert()) return result; // \u5173\u95ED\u8F6C\u6362\n\n    // \u94FE\u63A5\u4E0D\u505A\u8F6C\u79FB\n    if (idx > 0 && tokens[idx - 1].type === \"link_open\") {\n      return result;\n    }\n\n    // \u5BF9\u6807\u70B9\u7B26\u53F7\u8FDB\u884C\u8F6C\u6362\n    result = result.replace(/\\,/gim, \"\u060C\");\n    result = result.replace(/\\;/gim, \"\u061B\");\n\n    // \u5BF9 escapeed html \u6807\u7B7E\u505A\u8F6C\u79FB\n    result = result.replace(/(\\&.*)\\\u061B/gim, \"/$1;/\");\n\n    return khanText2ug(result);\n  };\n\n  // \u5BF9\u6574\u4E2A\u5BB9\u5668\u52A0\u4E00\u4E2Aclass\uFF0C\u4F7F\u5F97\u6837\u5F0F\u53EA\u9488\u5BF9\u6211\u4EEC\u6BCD\u8BED\n  md.renderer.backuprender = md.renderer.render;\n  md.renderer.render = function (tokens, options, env) {\n    const result = md.renderer.backuprender(tokens, options, env);\n\n    if (!isActiveConvert()) return result; // \u5173\u95ED\u8F6C\u6362\n\n    return `<div class=\"shirkhan-markdown-body\">${result}</div>`;\n  };\n  return md;\n}\n", "import { getActiveConvert } from \"./config\";\nimport { getConvertState, setConvertState } from \"./storage\";\nimport { registerCommand } from \"./registerCommand\";\nimport { showInfoMessage } from \"./message\";\nimport { shirkhanAlphabetPlugin } from \"./markdownItPlugin\";\nimport emoji from \"markdown-it-emoji\";\n\n/**\n * @param {import(\"vscode\").ExtensionContext} context\n * @returns\n */\nfunction updateConvertState(context) {\n  // \u7ED1\u5B9A\u547D\u4EE4\u884C\u6307\u4EE4\n  registerCommand(context, \"shirkhan-markdown.changeConvertState\", () => {\n    const currentStage = getConvertState(context);\n    const message = !currentStage ? \"\u5F00\u542F\" : \"\u5173\u95ED\";\n    showInfoMessage(`\u8F6C\u6362\u529F\u80FD\u5DF2${message}`);\n    setConvertState(context, !currentStage);\n  });\n}\n\n/** ------------------------------------------------------------------------------------------------------------------------------------------------------ */\n\n/**\n * @param {import(\"vscode\").ExtensionContext} context\n * @returns\n */\nexport function activate(context) {\n  // \u521D\u59CB\u5316\u5207\u6362\u72B6\u6001\n  const convertState = getActiveConvert(context);\n  setConvertState(context, convertState);\n\n  // \u63D0\u4F9B\u901A\u8FC7\u547D\u4EE4\u884C\u66F4\u65B0\u8F6C\u6362\u72B6\u6001\u529F\u80FD\n  updateConvertState(context);\n\n  return {\n    extendMarkdownIt(md) {\n      // \u652F\u6301\u8868\u60C5\n      convertState && md.use(emoji);\n\n      md.use(shirkhanAlphabetPlugin, () => {\n        // \u901A\u8FC7\u56DE\u8C03\u5B9E\u65F6\u83B7\u53D6\u8F6C\u6362\u72B6\u6001\n        return getConvertState(context);\n      });\n      return md;\n    },\n  };\n}\n", "export function deactivate() {\n  console.log(\"shirkhan-markdown \u63D2\u4EF6\u5DF2\u91CA\u653E \u3010deactivate\u3011\");\n}\n", "import { activate } from \"./activate\";\nimport { deactivate } from \"./deactivate\";\n\nmodule.exports = {\n  activate,\n  deactivate,\n};\n"],
  "mappingsf,OAAkB,CAAE,OAAO;AAAA,MAC3B,OAAkB,CAAE,OAAO;AAAA,MAC3B,cAAkB,CAAE,OAAO;AAAA,MAE3B,UAAkB,CAAE,MAAM;AAAA,MAC1B,KAAkB,CAAE,OAAO,QAAQ,OAAO;AAAA,MAC1C,UAAkB,CAAE,MAAM;AAAA,MAC1B,OAAkB,CAAE;AAAA,MACpB,KAAkB,CAAE,OAAO;AAAA,MAC3B,UAAkB,CAAE,OAAO,OAAO,QAAQ,QAAQ,OAAO;AAAA,MACzD,KAAkB,CAAE,OAAO,QAAQ,OAAO,QAAQ,OAAO,QAAQ,OAAO;AAAA,MACxE,SAAkB,CAAE,MAAM;AAAA,MAC1B,UAAkB,CAAE,OAAO;AAAA,MAC3B,cAAkB,CAAE,MAAM;AAAA,MAC1B,YAAkB,CAAE,MAAM,OAAO,MAAM;AAAA,MACvC,MAAkB,CAAE,MAAM;AAAA,MAC1B,OAAkB,CAAE,MAAM;AAAA,MAC1B,QAAkB,CAAE,MAAM;AAAA,MAC1B,aAAkB,CAAE,OAAO;AAAA,MAC3B,KAAkB,CAAE,QAAQ,SAAS,MAAM;AAAA,MAC3C,kBAAkB,CAAE,MAAM;AAAA,MAC1B,YAAkB,CAAE,OAAO;AAAA,MAC3B,OAAkB,CAAE,OAAO;AAAA,MAC3B,aAAkB,CAAE,OAAO;AAAA,MAC3B,UAAkB,CAAE,MAAM,OAAO,MAAM,OAAO,MAAM;AAAA,MACpD,MAAkB,CAAE,MAAM;AAAA;AAAA;AAAA;;;ACvC5B;AAAA;AAAA;AAEA,YAAO,UAAU,oBAAoB,QAAQ,KAAyB;AACpE,aAAO,OAAO,KAAK;AAAA;AAAA;AAAA;;;ACHrB;AAAA;AAMA;AAGA,YAAO,UAAU,qBAAqB,IAAI,SAAS,WAAW,QAAQ,WAAW;AAC/E,UAAI,iBAAiB,GAAG,MAAM,gBAC1B,MAAM,GAAG,MAAM,IAAI,SACnB,OAAO,IAAI,OAAO,CAAE,IAAI,EAAE,QAAQ,IAAI,EAAE,QAAQ,IAAI,GAAG,QAAS,KAAK;AAEzE,8BAAwB,MAAM,OAAO,OAAO;AAC1C,YAAI,OAAO,WAAW,GAAG,QAAQ;AAEjC,aAAK,QAAQ,WAAW,SAAU,OAAO,QAAQ,KAAK;AACpD,cAAI;AAEJ,cAAI,UAAU,eAAe,QAAQ;AAEnC,yBAAa,UAAU;AAGvB,gBAAI,SAAS,KAAK,CAAC,KAAK,KAAK,IAAI,SAAS,KAAK;AAC7C;AAAA;AAIF,gBAAI,SAAS,MAAM,SAAS,IAAI,UAAU,CAAC,KAAK,KAAK,IAAI,SAAS,MAAM,UAAU;AAChF;AAAA;AAAA,iBAEG;AACL,yBAAa,MAAM,MAAM,GAAG;AAAA;AAI9B,cAAI,SAAS,UAAU;AACrB,oBAAgB,IAAI,MAAM,QAAQ,IAAI;AACtC,kBAAM,UAAU,KAAK,MAAM,UAAU;AACrC,kBAAM,KAAK;AAAA;AAGb,kBAAgB,IAAI,MAAM,SAAS,IAAI;AACvC,gBAAM,SAAU;AAChB,gBAAM,UAAU,QAAQ;AACxB,gBAAM,KAAK;AAEX,qBAAW,SAAS,MAAM;AAAA;AAG5B,YAAI,WAAW,KAAK,QAAQ;AAC1B,kBAAgB,IAAI,MAAM,QAAQ,IAAI;AACtC,gBAAM,UAAU,KAAK,MAAM;AAC3B,gBAAM,KAAK;AAAA;AAGb,eAAO;AAAA;AAGT,aAAO,uBAAuB,OAAO;AACnC,YAAI,GAAG,GAAG,GAAG,QAAQ,OACjB,cAAc,MAAM,QACpB,gBAAgB;AAEpB,aAAK,IAAI,GAAG,IAAI,YAAY,QAAQ,IAAI,GAAG,KAAK;AAC9C,cAAI,YAAY,GAAG,SAAS,UAAU;AAAE;AAAA;AACxC,mBAAS,YAAY,GAAG;AAIxB,eAAK,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,KAAK;AACvC,oBAAQ,OAAO;AAEf,gBAAI,MAAM,SAAS,eAAe,MAAM,SAAS,cAAc;AAC7D,kBAAI,MAAM,SAAS,QAAQ;AAAE,iCAAiB,MAAM;AAAA;AAAA;AAGtD,gBAAI,MAAM,SAAS,UAAU,kBAAkB,KAAK,OAAO,KAAK,MAAM,UAAU;AAE9E,0BAAY,GAAG,WAAW,SAAS,eACjC,QAAQ,GAAG,eAAe,MAAM,SAAS,MAAM,OAAO,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AClFxE;AAAA;AAGA;AAGA,qBAAiB,KAAK;AACpB,aAAO,IAAI,QAAQ,wBAAwB;AAAA;AAI7C,YAAO,UAAU,wBAAwB,SAAS;AAChD,UAAI,UAAU,QAAQ,MAClB;AAGJ,UAAI,QAAQ,QAAQ,QAAQ;AAC1B,kBAAU,OAAO,KAAK,SAAS,OAAO,SAAU,KAAK,KAAK;AACxD,cAAI,QAAQ,QAAQ,QAAQ,QAAQ,GAAG;AACrC,gBAAI,OAAO,QAAQ;AAAA;AAErB,iBAAO;AAAA,WACN;AAAA;AAIL,kBAAY,OAAO,KAAK,QAAQ,WAAW,OAAO,SAAU,KAAK,KAAK;AAEpE,YAAI,CAAC,QAAQ,MAAM;AAAE,iBAAO;AAAA;AAE5B,YAAI,MAAM,QAAQ,QAAQ,UAAU,OAAO;AACzC,kBAAQ,UAAU,KAAK,QAAQ,SAAU,OAAO;AAC9C,gBAAI,SAAS;AAAA;AAEf,iBAAO;AAAA;AAGT,YAAI,QAAQ,UAAU,QAAQ;AAC9B,eAAO;AAAA,SACN;AAEH,UAAI,QAAO,OAAO,KAAK,UACnB;AAGJ,UAAI,MAAK,WAAW,GAAG;AACrB,gBAAQ;AAAA,aACH;AAEL,gBAAQ,MACL,IAAI,SAAU,MAAM;AAAE,iBAAO,MAAM,OAAO;AAAA,WAC1C,OAAO,OAAO,KAAK,YACnB,OACA,UACA,IAAI,SAAU,MAAM;AAAE,iBAAO,QAAQ;AAAA,WACrC,KAAK;AAAA;AAEV,UAAI,SAAS,OAAO;AACpB,UAAI,YAAY,OAAO,OAAO;AAE9B,aAAO;AAAA,QACL,MAAM;AAAA,QACN;AAAA,QACA;AAAA,QACA;AAAA;AAAA;AAAA;AAAA;;;AChEJ;AAAA;AAAA;AAGA,QAAI,aAAoB;AACxB,QAAI,gBAAoB;AACxB,QAAI,iBAAoB;AAGxB,YAAO,UAAU,sBAAsB,IAAI,SAAS;AAClD,UAAI,WAAW;AAAA,QACb,MAAM;AAAA,QACN,WAAW;AAAA,QACX,SAAS;AAAA;AAGX,UAAI,OAAO,eAAe,GAAG,MAAM,OAAO,IAAI,UAAU,WAAW;AAEnE,SAAG,SAAS,MAAM,QAAQ;AAE1B,SAAG,KAAK,MAAM,KAAK,SAAS,cAAc,IAAI,KAAK,MAAM,KAAK,WAAW,KAAK,QAAQ,KAAK;AAAA;AAAA;AAAA;;;ACnB7F;AAAA;AAAA;AAGA,QAAI,eAAoB;AACxB,QAAI,oBAAoB;AACxB,QAAI,oBAAoB;AAGxB,YAAO,UAAU,sBAAsB,IAAI,SAAS;AAClD,UAAI,WAAW;AAAA,QACb,MAAM;AAAA,QACN,WAAW;AAAA,QACX,SAAS;AAAA;AAGX,UAAI,OAAO,GAAG,MAAM,OAAO,IAAI,UAAU,WAAW;AAEpD,wBAAkB,IAAI;AAAA;AAAA;AAAA;;;ACjBxB,IAAM,SAAS,QAAQ;AAOhB,gBAAgB,KAAK;AAC1B,SAAO,OAAO,UAAU,iBAAiB,oBAAoB,IAAI;AAAA;AAO5D,4BAA4B;AACjC,SAAO,OAAO;AAAA;;;ACVT,6BAA6B,SAAS,KAAK,OAAO;AACvD,UAAQ,YAAY,OAAO,KAAK;AAAA;AAQ3B,6BAA6B,SAAS,KAAK;AAChD,SAAO,QAAQ,YAAY,IAAI;AAAA;AAqB1B,yBAAyB,SAAS,OAAO;AAC9C,SAAO,oBAAoB,SAAS,iBAAiB;AAAA;AAQhD,yBAAyB,SAAS;AACvC,SAAO,oBAAoB,SAAS;AAAA;;;AC/CtC,IAAM,UAAS,QAAQ;AAehB,yBACL,SACA,iBACA,aACA,UAAU,QACV;AACA,MAAI,aAAa,QAAO,SAAS,gBAC/B,iBACA,aACA;AAGF,UAAQ,cAAc,KAAK;AAAA;;;AC3B7B,IAAM,UAAS,QAAQ;AAEhB,IAAM,kBAAkB,CAAC,YAAY;AAC1C,UAAO,OAAO,uBAAuB;AAAA;;;ACFvC,IAAM,gBAAgB;AAGtB,IAAM,QAAQ;AACd,IAAM,UAAU;AAAA,EACd;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM,MAAM;AAAA,IACZ,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA,EAEf;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA;AAAA;AASjB,IAAI,cAAc,OAAO;AACzB,IAAI,oBAAoB,CAAC,KAAK,KAAK,UAAU,OAAO,MAAM,YAAY,KAAK,KAAK,EAAE,YAAY,MAAM,cAAc,MAAM,UAAU,MAAM,WAAW,IAAI,OAAO;AAC9J,IAAI,kBAAkB,CAAC,KAAK,KAAK,UAAU;AACzC,oBAAkB,KAAK,OAAO,QAAQ,WAAW,MAAM,KAAK,KAAK;AACjE,SAAO;AAAA;AAET,cAAc,OAAO;AACnB,MAAI,OAAO;AACT,UAAM;AAAA;AAAA;AAGV,AAMA,IAAI,WAAW,mBAAmB,KAAK;AACrC,SAAO,OAAO,QAAQ,IAAI,eAAe,QAAQ,OAAO,IAAI,YAAY,aAAa,cAAc,IAAI,YAAY,SAAS;AAAA;AAE9H,IAAI,SAAS,OAAO,UAAU;AAC9B,IAAI,QAAQ,OAAO,UAAU;AAC7B,IAAI,iBAAiB,OAAO;AAC5B,IAAI,OAAO,OAAO;AAClB,IAAI,UAAU,kBAAkB,KAAK;AACnC,MAAI,OAAO,MAAM,YAAY,YAAY;AACvC,WAAO,MAAM,QAAQ;AAAA;AAEvB,SAAO,MAAM,KAAK,SAAS;AAAA;AAE7B,IAAI,kBAAkB,uBAAuB,KAAK;AAChD,MAAI,CAAC,OAAO,MAAM,KAAK,SAAS,mBAAmB;AACjD,WAAO;AAAA;AAET,MAAI,oBAAoB,OAAO,KAAK,KAAK;AACzC,MAAI,mBAAmB,IAAI,eAAe,IAAI,YAAY,aAAa,OAAO,KAAK,IAAI,YAAY,WAAW;AAC9G,MAAI,IAAI,eAAe,CAAC,qBAAqB,CAAC,kBAAkB;AAC9D,WAAO;AAAA;AAET,MAAI;AACJ,OAAK,OAAO,KAAK;AAAA;AAEjB,SAAO,OAAO,QAAQ,eAAe,OAAO,KAAK,KAAK;AAAA;AAExD,IAAI,cAAc,sBAAsB,QAAQ,SAAS;AACvD,MAAI,kBAAkB,QAAQ,SAAS,aAAa;AAClD,mBAAe,QAAQ,QAAQ,MAAM;AAAA,MACnC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,OAAO,QAAQ;AAAA,MACf,UAAU;AAAA;AAAA,SAEP;AACL,WAAO,QAAQ,QAAQ,QAAQ;AAAA;AAAA;AAGnC,IAAI,cAAc,sBAAsB,KAAK,MAAM;AACjD,MAAI,SAAS,aAAa;AACxB,QAAI,CAAC,OAAO,KAAK,KAAK,OAAO;AAC3B,aAAO;AAAA,eACE,MAAM;AACf,aAAO,KAAK,KAAK,MAAM;AAAA;AAAA;AAG3B,SAAO,IAAI;AAAA;AAEb,IAAI,SAAS,mBAAmB;AAC9B,MAAI,SAAS,MAAM,KAAK,MAAM,aAAa;AAC3C,MAAI,SAAS,UAAU;AACvB,MAAI,IAAI;AACR,MAAI,SAAS,UAAU;AACvB,MAAI,OAAO;AACX,MAAI,OAAO,WAAW,WAAW;AAC/B,WAAO;AACP,aAAS,UAAU,MAAM;AACzB,QAAI;AAAA;AAEN,MAAI,UAAU,QAAQ,OAAO,WAAW,YAAY,OAAO,WAAW,YAAY;AAChF,aAAS;AAAA;AAEX,SAAO,IAAI,QAAQ,EAAE,GAAG;AACtB,cAAU,UAAU;AACpB,QAAI,WAAW,MAAM;AACnB,WAAK,QAAQ,SAAS;AACpB,cAAM,YAAY,QAAQ;AAC1B,eAAO,YAAY,SAAS;AAC5B,YAAI,WAAW,MAAM;AACnB,cAAI,QAAQ,QAAS,iBAAgB,SAAU,eAAc,QAAQ,SAAS;AAC5E,gBAAI,aAAa;AACf,4BAAc;AACd,sBAAQ,OAAO,QAAQ,OAAO,MAAM;AAAA,mBAC/B;AACL,sBAAQ,OAAO,gBAAgB,OAAO,MAAM;AAAA;AAE9C,wBAAY,QAAQ,EAAE,MAAM,UAAU,QAAQ,MAAM,OAAO;AAAA,qBAClD,OAAO,SAAS,aAAa;AACtC,wBAAY,QAAQ,EAAE,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAMhD,SAAO;AAAA;AAET,wBAAwB,OAAO;AAC7B,MAAI,OAAO,UAAU,SAAS,KAAK,WAAW,mBAAmB;AAC/D,WAAO;AAAA;AAET,QAAM,YAAY,OAAO,eAAe;AACxC,SAAO,cAAc,QAAQ,cAAc,OAAO;AAAA;AAEpD,kBAAkB;AAChB,QAAM,MAAM;AACZ,QAAM,WAAW,EAAE,KAAK;AACxB,SAAO;AACP,kBAAgB,QAAQ;AACtB,QAAI,kBAAkB;AACtB,UAAM,WAAW,OAAO;AACxB,QAAI,OAAO,aAAa,YAAY;AAClC,YAAM,IAAI,UAAU,6CAA6C;AAAA;AAEnE,SAAK,MAAM,GAAG;AACd,kBAAc,UAAU,QAAQ;AAC9B,YAAM,KAAK,IAAI,EAAE;AACjB,UAAI,SAAS;AACb,UAAI,OAAO;AACT,iBAAS;AACT;AAAA;AAEF,aAAO,EAAE,SAAS,OAAO,QAAQ;AAC/B,YAAI,OAAO,YAAY,QAAQ,OAAO,YAAY,QAAQ;AACxD,iBAAO,UAAU,OAAO;AAAA;AAAA;AAG5B,eAAS;AACT,UAAI,IAAI;AACN,aAAK,IAAI,MAAM,GAAG;AAAA,aACb;AACL,iBAAS,MAAM,GAAG;AAAA;AAAA;AAAA;AAIxB,eAAa,YAAY;AACvB,QAAI,OAAO,eAAe,YAAY;AACpC,YAAM,IAAI,UAAU,iDAAiD;AAAA;AAEvE,QAAI,KAAK;AACT,WAAO;AAAA;AAAA;AAGX,cAAc,YAAY,UAAU;AAClC,MAAI;AACJ,SAAO;AACP,sBAAoB,YAAY;AAC9B,UAAM,oBAAoB,WAAW,SAAS,WAAW;AACzD,QAAI;AACJ,QAAI,mBAAmB;AACrB,iBAAW,KAAK;AAAA;AAElB,QAAI;AACF,eAAS,WAAW,GAAG;AAAA,aAChB,OAAP;AACA,YAAM,YAAY;AAClB,UAAI,qBAAqB,QAAQ;AAC/B,cAAM;AAAA;AAER,aAAO,KAAK;AAAA;AAEd,QAAI,CAAC,mBAAmB;AACtB,UAAI,kBAAkB,SAAS;AAC7B,eAAO,KAAK,MAAM;AAAA,iBACT,kBAAkB,OAAO;AAClC,aAAK;AAAA,aACA;AACL,aAAK;AAAA;AAAA;AAAA;AAIX,gBAAc,UAAU,QAAQ;AAC9B,QAAI,CAAC,QAAQ;AACX,eAAS;AACT,eAAS,OAAO,GAAG;AAAA;AAAA;AAGvB,gBAAc,OAAO;AACnB,SAAK,MAAM;AAAA;AAAA;AAGf,IAAI,QAAQ,GAAG;AACf,2BAA2B,OAAO;AAChC,MAAI,CAAC,SAAS,OAAO,UAAU,UAAU;AACvC,WAAO;AAAA;AAET,MAAI,MAAM,KAAK,OAAO,eAAe,MAAM,KAAK,OAAO,SAAS;AAC9D,WAAO,SAAS,MAAM;AAAA;AAExB,MAAI,MAAM,KAAK,OAAO,YAAY,MAAM,KAAK,OAAO,QAAQ;AAC1D,WAAO,SAAS;AAAA;AAElB,MAAI,MAAM,KAAK,OAAO,WAAW,MAAM,KAAK,OAAO,WAAW;AAC5D,WAAO,MAAM;AAAA;AAEf,SAAO;AAAA;AAET,eAAe,QAAQ;AACrB,SAAO,MAAM,UAAU,OAAO,QAAQ,MAAM,MAAM,UAAU,OAAO;AAAA;AAErE,kBAAkB,KAAK;AACrB,SAAO,MAAM,OAAO,IAAI,SAAS,MAAM,MAAM,OAAO,IAAI;AAAA;AAE1D,eAAe,OAAO;AACpB,SAAO,SAAS,OAAO,UAAU,WAAW,QAAQ;AAAA;AAEtD,iCAA2B,MAAM;AAAA,EAC/B,YAAY,QAAQ,OAAO,QAAQ;AACjC,QAAI,QAAQ,CAAC,MAAM;AACnB,QAAI,YAAY;AAAA,MACd,OAAO,EAAE,MAAM,MAAM,QAAQ;AAAA,MAC7B,KAAK,EAAE,MAAM,MAAM,QAAQ;AAAA;AAE7B,QAAI;AACJ;AACA,QAAI,OAAO,UAAU,UAAU;AAC7B,eAAS;AACT,cAAQ;AAAA;AAEV,QAAI,OAAO,WAAW,UAAU;AAC9B,eAAS,OAAO,QAAQ;AACxB,UAAI,WAAW,IAAI;AACjB,cAAM,KAAK;AAAA,aACN;AACL,cAAM,KAAK,OAAO,MAAM,GAAG;AAC3B,cAAM,KAAK,OAAO,MAAM,SAAS;AAAA;AAAA;AAGrC,QAAI,OAAO;AACT,UAAI,UAAU,SAAS,cAAc,OAAO;AAC1C,YAAI,MAAM,UAAU;AAClB,sBAAY,MAAM;AAAA;AAAA,iBAEX,WAAW,SAAS,SAAS,OAAO;AAC7C,oBAAY;AAAA,iBACH,UAAU,SAAS,YAAY,OAAO;AAC/C,kBAAU,QAAQ;AAAA;AAAA;AAGtB,SAAK,OAAO,kBAAkB,UAAU;AACxC,SAAK,UAAU,OAAO,WAAW,WAAW,OAAO,UAAU;AAC7D,SAAK,QAAQ,OAAO,WAAW,WAAW,OAAO,QAAQ;AACzD,SAAK,SAAS,KAAK;AACnB,SAAK,OAAO,UAAU,MAAM;AAC5B,SAAK,SAAS,UAAU,MAAM;AAC9B,SAAK,SAAS,MAAM;AACpB,SAAK,SAAS,MAAM;AACpB,SAAK,WAAW;AAChB,SAAK;AACL,SAAK;AACL,SAAK;AACL,SAAK;AAAA;AAAA;AAGT,aAAa,UAAU,OAAO;AAC9B,aAAa,UAAU,OAAO;AAC9B,aAAa,UAAU,SAAS;AAChC,aAAa,UAAU,UAAU;AACjC,aAAa,UAAU,QAAQ;AAC/B,aAAa,UAAU,QAAQ;AAC/B,aAAa,UAAU,SAAS;AAChC,aAAa,UAAU,OAAO;AAC9B,aAAa,UAAU,SAAS;AAChC,aAAa,UAAU,SAAS;AAChC,aAAa,UAAU,WAAW;AAClC,IAAM,OAAO,EAAE,UAAU,SAAS,SAAS,MAAM,KAAK;AACtD,kBAAkB,OAAO,KAAK;AAC5B,MAAI,QAAQ,UAAU,OAAO,QAAQ,UAAU;AAC7C,UAAM,IAAI,UAAU;AAAA;AAEtB,eAAa;AACb,MAAI,QAAQ;AACZ,MAAI,MAAM;AACV,MAAI,SAAS,MAAM;AACnB,MAAI;AACJ,MAAI,QAAQ,UAAU,IAAI,WAAW,KAAK,IAAI,SAAS,MAAM,QAAQ;AACnE,WAAO,UAAU;AACf,UAAI,MAAM,WAAW,YAAY,IAAI;AACnC,YAAI,cAAc;AAChB,kBAAQ,SAAS;AACjB;AAAA;AAAA,iBAEO,MAAM,GAAG;AAClB,uBAAe;AACf,cAAM,SAAS;AAAA;AAAA;AAGnB,WAAO,MAAM,IAAI,KAAK,MAAM,MAAM,OAAO;AAAA;AAE3C,MAAI,QAAQ,OAAO;AACjB,WAAO;AAAA;AAET,MAAI,mBAAmB;AACvB,MAAI,WAAW,IAAI,SAAS;AAC5B,SAAO,UAAU;AACf,QAAI,MAAM,WAAW,YAAY,IAAI;AACnC,UAAI,cAAc;AAChB,gBAAQ,SAAS;AACjB;AAAA;AAAA,WAEG;AACL,UAAI,mBAAmB,GAAG;AACxB,uBAAe;AACf,2BAAmB,SAAS;AAAA;AAE9B,UAAI,WAAW,IAAI;AACjB,YAAI,MAAM,WAAW,YAAY,IAAI,WAAW,aAAa;AAC3D,cAAI,WAAW,GAAG;AAChB,kBAAM;AAAA;AAAA,eAEH;AACL,qBAAW;AACX,gBAAM;AAAA;AAAA;AAAA;AAAA;AAKd,MAAI,UAAU,KAAK;AACjB,UAAM;AAAA,aACG,MAAM,GAAG;AAClB,UAAM,MAAM;AAAA;AAEd,SAAO,MAAM,MAAM,OAAO;AAAA;AAE5B,iBAAiB,OAAO;AACtB,eAAa;AACb,MAAI,MAAM,WAAW,GAAG;AACtB,WAAO;AAAA;AAET,MAAI,MAAM;AACV,MAAI,SAAS,MAAM;AACnB,MAAI;AACJ,SAAO,EAAE,QAAQ;AACf,QAAI,MAAM,WAAW,YAAY,IAAI;AACnC,UAAI,gBAAgB;AAClB,cAAM;AACN;AAAA;AAAA,eAEO,CAAC,gBAAgB;AAC1B,uBAAiB;AAAA;AAAA;AAGrB,SAAO,MAAM,IAAI,MAAM,WAAW,OAAO,KAAK,MAAM,MAAM,QAAQ,KAAK,MAAM,WAAW,OAAO,KAAK,OAAO,MAAM,MAAM,GAAG;AAAA;AAE5H,iBAAiB,OAAO;AACtB,eAAa;AACb,MAAI,SAAS,MAAM;AACnB,MAAI,MAAM;AACV,MAAI,YAAY;AAChB,MAAI,WAAW;AACf,MAAI,cAAc;AAClB,MAAI;AACJ,SAAO,UAAU;AACf,UAAM,OAAO,MAAM,WAAW;AAC9B,QAAI,SAAS,IAAI;AACf,UAAI,gBAAgB;AAClB,oBAAY,SAAS;AACrB;AAAA;AAEF;AAAA;AAEF,QAAI,MAAM,GAAG;AACX,uBAAiB;AACjB,YAAM,SAAS;AAAA;AAEjB,QAAI,SAAS,IAAI;AACf,UAAI,WAAW,GAAG;AAChB,mBAAW;AAAA,iBACF,gBAAgB,GAAG;AAC5B,sBAAc;AAAA;AAAA,eAEP,WAAW,IAAI;AACxB,oBAAc;AAAA;AAAA;AAGlB,MAAI,WAAW,KAAK,MAAM,KAAK,gBAAgB,KAAK,gBAAgB,KAAK,aAAa,MAAM,KAAK,aAAa,YAAY,GAAG;AAC3H,WAAO;AAAA;AAET,SAAO,MAAM,MAAM,UAAU;AAAA;AAE/B,iBAAiB,UAAU;AACzB,MAAI,SAAS;AACb,MAAI;AACJ,SAAO,EAAE,SAAS,SAAS,QAAQ;AACjC,iBAAa,SAAS;AACtB,QAAI,SAAS,SAAS;AACpB,eAAS,WAAW,SAAS,SAAS,UAAU,SAAS,MAAM,SAAS;AAAA;AAAA;AAG5E,SAAO,WAAW,SAAS,MAAM,UAAU;AAAA;AAE7C,mBAAmB,OAAO;AACxB,eAAa;AACb,QAAM,WAAW,MAAM,WAAW,OAAO;AACzC,MAAI,QAAQ,gBAAgB,OAAO,CAAC;AACpC,MAAI,MAAM,WAAW,KAAK,CAAC,UAAU;AACnC,YAAQ;AAAA;AAEV,MAAI,MAAM,SAAS,KAAK,MAAM,WAAW,MAAM,SAAS,OAAO,IAAI;AACjE,aAAS;AAAA;AAEX,SAAO,WAAW,MAAM,QAAQ;AAAA;AAElC,yBAAyB,OAAO,gBAAgB;AAC9C,MAAI,SAAS;AACb,MAAI,oBAAoB;AACxB,MAAI,YAAY;AAChB,MAAI,OAAO;AACX,MAAI,SAAS;AACb,MAAI;AACJ,MAAI;AACJ,SAAO,EAAE,UAAU,MAAM,QAAQ;AAC/B,QAAI,SAAS,MAAM,QAAQ;AACzB,aAAO,MAAM,WAAW;AAAA,eACf,SAAS,IAAI;AACtB;AAAA,WACK;AACL,aAAO;AAAA;AAET,QAAI,SAAS,IAAI;AACf,UAAI,cAAc,SAAS,KAAK,SAAS;AACvC;AAAA,eACO,cAAc,SAAS,KAAK,SAAS,GAAG;AAC/C,YAAI,OAAO,SAAS,KAAK,sBAAsB,KAAK,OAAO,WAAW,OAAO,SAAS,OAAO,MAAM,OAAO,WAAW,OAAO,SAAS,OAAO,IAAI;AAC9I,cAAI,OAAO,SAAS,GAAG;AACrB,6BAAiB,OAAO,YAAY;AACpC,gBAAI,mBAAmB,OAAO,SAAS,GAAG;AACxC,kBAAI,iBAAiB,GAAG;AACtB,yBAAS;AACT,oCAAoB;AAAA,qBACf;AACL,yBAAS,OAAO,MAAM,GAAG;AACzB,oCAAoB,OAAO,SAAS,IAAI,OAAO,YAAY;AAAA;AAE7D,0BAAY;AACZ,qBAAO;AACP;AAAA;AAAA,qBAEO,OAAO,SAAS,GAAG;AAC5B,qBAAS;AACT,gCAAoB;AACpB,wBAAY;AACZ,mBAAO;AACP;AAAA;AAAA;AAGJ,YAAI,gBAAgB;AAClB,mBAAS,OAAO,SAAS,IAAI,SAAS,QAAQ;AAC9C,8BAAoB;AAAA;AAAA,aAEjB;AACL,YAAI,OAAO,SAAS,GAAG;AACrB,oBAAU,MAAM,MAAM,MAAM,YAAY,GAAG;AAAA,eACtC;AACL,mBAAS,MAAM,MAAM,YAAY,GAAG;AAAA;AAEtC,4BAAoB,SAAS,YAAY;AAAA;AAE3C,kBAAY;AACZ,aAAO;AAAA,eACE,SAAS,MAAM,OAAO,IAAI;AACnC;AAAA,WACK;AACL,aAAO;AAAA;AAAA;AAGX,SAAO;AAAA;AAET,sBAAsB,OAAO;AAC3B,MAAI,OAAO,UAAU,UAAU;AAC7B,UAAM,IAAI,UAAU,qCAAqC,KAAK,UAAU;AAAA;AAAA;AAG5E,IAAM,OAAO,EAAE;AACf,eAAe;AACb,SAAO;AAAA;AAET,eAAe,eAAe;AAC5B,SAAO,kBAAkB,QAAQ,OAAO,kBAAkB,YAAY,cAAc,QAAQ,cAAc;AAAA;AAE5G,mBAAmB,OAAO;AACxB,MAAI,OAAO,UAAU,UAAU;AAC7B,YAAQ,IAAI,IAAI;AAAA,aACP,CAAC,MAAM,QAAQ;AACxB,UAAM,QAAQ,IAAI,UAAU,iFAAiF,QAAQ;AACrH,UAAM,OAAO;AACb,UAAM;AAAA;AAER,MAAI,MAAM,aAAa,SAAS;AAC9B,UAAM,QAAQ,IAAI,UAAU;AAC5B,UAAM,OAAO;AACb,UAAM;AAAA;AAER,SAAO,oBAAoB;AAAA;AAE7B,6BAA6B,KAAK;AAChC,MAAI,IAAI,aAAa,IAAI;AACvB,UAAM,QAAQ,IAAI,UAAU;AAC5B,UAAM,OAAO;AACb,UAAM;AAAA;AAER,QAAM,WAAW,IAAI;AACrB,MAAI,SAAS;AACb,SAAO,EAAE,SAAS,SAAS,QAAQ;AACjC,QAAI,SAAS,WAAW,YAAY,MAAM,SAAS,WAAW,SAAS,OAAO,IAAI;AAChF,YAAM,QAAQ,SAAS,WAAW,SAAS;AAC3C,UAAI,UAAU,MAAM,UAAU,KAAK;AACjC,cAAM,QAAQ,IAAI,UAAU;AAC5B,cAAM,OAAO;AACb,cAAM;AAAA;AAAA;AAAA;AAIZ,SAAO,mBAAmB;AAAA;AAE5B,IAAM,QAAQ,CAAC,WAAW,QAAQ,YAAY,QAAQ,WAAW;AACjE,kBAAY;AAAA,EACV,YAAY,OAAO;AACjB,QAAI;AACJ,QAAI,CAAC,OAAO;AACV,gBAAU;AAAA,eACD,OAAO,UAAU,YAAY,SAAS,QAAQ;AACvD,gBAAU,EAAE;AAAA,eACH,MAAM,QAAQ;AACvB,gBAAU,EAAE,MAAM;AAAA,WACb;AACL,gBAAU;AAAA;AAEZ,SAAK,OAAO;AACZ,SAAK,WAAW;AAChB,SAAK,UAAU;AACf,SAAK,MAAM,KAAK;AAChB,SAAK;AACL,SAAK;AACL,SAAK;AACL,SAAK;AACL,QAAI,SAAS;AACb,WAAO,EAAE,SAAS,MAAM,QAAQ;AAC9B,YAAM,QAAQ,MAAM;AACpB,UAAI,SAAS,WAAW,QAAQ,WAAW,QAAQ;AACjD,aAAK,SAAS,UAAU,YAAY,CAAC,GAAG,QAAQ,UAAU,QAAQ;AAAA;AAAA;AAGtE,QAAI;AACJ,SAAK,QAAQ,SAAS;AACpB,UAAI,CAAC,MAAM,SAAS;AAClB,aAAK,QAAQ,QAAQ;AAAA;AAAA;AAAA,MAGvB,OAAO;AACT,WAAO,KAAK,QAAQ,KAAK,QAAQ,SAAS;AAAA;AAAA,MAExC,KAAK,OAAO;AACd,QAAI,MAAM,QAAQ;AAChB,cAAQ,UAAU;AAAA;AAEpB,mBAAe,OAAO;AACtB,QAAI,KAAK,SAAS,OAAO;AACvB,WAAK,QAAQ,KAAK;AAAA;AAAA;AAAA,MAGlB,UAAU;AACZ,WAAO,OAAO,KAAK,SAAS,WAAW,KAAK,QAAQ,KAAK,QAAQ;AAAA;AAAA,MAE/D,QAAQ,UAAU;AACpB,eAAW,KAAK,UAAU;AAC1B,SAAK,OAAO,KAAK,KAAK,YAAY,IAAI,KAAK;AAAA;AAAA,MAEzC,WAAW;AACb,WAAO,OAAO,KAAK,SAAS,WAAW,KAAK,SAAS,KAAK,QAAQ;AAAA;AAAA,MAEhE,SAAS,WAAW;AACtB,mBAAe,WAAW;AAC1B,eAAW,WAAW;AACtB,SAAK,OAAO,KAAK,KAAK,KAAK,WAAW,IAAI;AAAA;AAAA,MAExC,UAAU;AACZ,WAAO,OAAO,KAAK,SAAS,WAAW,KAAK,QAAQ,KAAK,QAAQ;AAAA;AAAA,MAE/D,QAAQ,UAAU;AACpB,eAAW,UAAU;AACrB,eAAW,KAAK,SAAS;AACzB,QAAI,UAAU;AACZ,UAAI,SAAS,WAAW,OAAO,IAAI;AACjC,cAAM,IAAI,MAAM;AAAA;AAElB,UAAI,SAAS,SAAS,KAAK,IAAI;AAC7B,cAAM,IAAI,MAAM;AAAA;AAAA;AAGpB,SAAK,OAAO,KAAK,KAAK,KAAK,SAAS,KAAK,OAAQ,aAAY;AAAA;AAAA,MAE3D,OAAO;AACT,WAAO,OAAO,KAAK,SAAS,WAAW,KAAK,SAAS,KAAK,MAAM,KAAK,WAAW;AAAA;AAAA,MAE9E,KAAK,MAAM;AACb,mBAAe,MAAM;AACrB,eAAW,MAAM;AACjB,SAAK,OAAO,KAAK,KAAK,KAAK,WAAW,IAAI,OAAQ,MAAK,WAAW;AAAA;AAAA,EAEpE,SAAS,UAAU;AACjB,WAAQ,MAAK,SAAS,IAAI,SAAS;AAAA;AAAA,EAErC,QAAQ,QAAQ,OAAO,QAAQ;AAC7B,UAAM,UAAU,IAAI,aAAa,QAAQ,OAAO;AAChD,QAAI,KAAK,MAAM;AACb,cAAQ,OAAO,KAAK,OAAO,MAAM,QAAQ;AACzC,cAAQ,OAAO,KAAK;AAAA;AAEtB,YAAQ,QAAQ;AAChB,SAAK,SAAS,KAAK;AACnB,WAAO;AAAA;AAAA,EAET,KAAK,QAAQ,OAAO,QAAQ;AAC1B,UAAM,UAAU,KAAK,QAAQ,QAAQ,OAAO;AAC5C,YAAQ,QAAQ;AAChB,WAAO;AAAA;AAAA,EAET,KAAK,QAAQ,OAAO,QAAQ;AAC1B,UAAM,UAAU,KAAK,QAAQ,QAAQ,OAAO;AAC5C,YAAQ,QAAQ;AAChB,UAAM;AAAA;AAAA;AAGV,oBAAoB,MAAM,MAAM;AAC9B,MAAI,QAAQ,KAAK,SAAS,KAAK,MAAM;AACnC,UAAM,IAAI,MAAM,MAAM,OAAO,yCAAyC,KAAK,MAAM;AAAA;AAAA;AAGrF,wBAAwB,MAAM,MAAM;AAClC,MAAI,CAAC,MAAM;AACT,UAAM,IAAI,MAAM,MAAM,OAAO;AAAA;AAAA;AAGjC,oBAAoB,OAAO,MAAM;AAC/B,MAAI,CAAC,OAAO;AACV,UAAM,IAAI,MAAM,cAAc,OAAO;AAAA;AAAA;AAGzC,IAAM,UAAU,OAAO;AACvB,IAAM,QAAQ,GAAG;AACjB,gBAAgB;AACd,QAAM,eAAe;AACrB,QAAM,YAAY;AAClB,MAAI,YAAY;AAChB,MAAI;AACJ,MAAI,cAAc;AAClB,YAAU,OAAO;AACjB,YAAU,SAAS;AACnB,YAAU,WAAW;AACrB,YAAU,SAAS;AACnB,YAAU,YAAY;AACtB,YAAU,MAAM;AAChB,YAAU,QAAQ;AAClB,YAAU,YAAY;AACtB,YAAU,MAAM;AAChB,YAAU,UAAU;AACpB,YAAU,UAAU;AACpB,YAAU,cAAc;AACxB,SAAO;AACP,uBAAqB;AACnB,UAAM,cAAc;AACpB,QAAI,SAAS;AACb,WAAO,EAAE,SAAS,UAAU,QAAQ;AAClC,kBAAY,IAAI,GAAG,UAAU;AAAA;AAE/B,gBAAY,KAAK,OAAO,MAAM,IAAI;AAClC,WAAO;AAAA;AAET,gBAAc,KAAK,OAAO;AACxB,QAAI,OAAO,QAAQ,UAAU;AAC3B,UAAI,UAAU,WAAW,GAAG;AAC1B,uBAAe,QAAQ;AACvB,kBAAU,OAAO;AACjB,eAAO;AAAA;AAET,aAAO,MAAM,KAAK,WAAW,QAAQ,UAAU,QAAQ;AAAA;AAEzD,QAAI,KAAK;AACP,qBAAe,QAAQ;AACvB,kBAAY;AACZ,aAAO;AAAA;AAET,WAAO;AAAA;AAET,oBAAkB;AAChB,QAAI,QAAQ;AACV,aAAO;AAAA;AAET,WAAO,EAAE,cAAc,UAAU,QAAQ;AACvC,YAAM,CAAC,aAAa,WAAW,UAAU;AACzC,UAAI,QAAQ,OAAO,OAAO;AACxB;AAAA;AAEF,UAAI,QAAQ,OAAO,MAAM;AACvB,gBAAQ,KAAK;AAAA;AAEf,YAAM,cAAc,SAAS,KAAK,WAAW,GAAG;AAChD,UAAI,OAAO,gBAAgB,YAAY;AACrC,qBAAa,IAAI;AAAA;AAAA;AAGrB,aAAS;AACT,kBAAc,OAAO;AACrB,WAAO;AAAA;AAET,eAAa,UAAU,SAAS;AAC9B,QAAI;AACJ,mBAAe,OAAO;AACtB,QAAI,UAAU,QAAQ,UAAU;AAC9B;AAAA,aACO,OAAO,UAAU,YAAY;AACpC,gBAAU,OAAO,GAAG;AAAA,eACX,OAAO,UAAU,UAAU;AACpC,UAAI,MAAM,QAAQ,QAAQ;AACxB,gBAAQ;AAAA,aACH;AACL,kBAAU;AAAA;AAAA,WAEP;AACL,YAAM,IAAI,UAAU,iCAAiC,QAAQ;AAAA;AAE/D,QAAI,UAAU;AACZ,gBAAU,WAAW,OAAO,OAAO,UAAU,YAAY,IAAI;AAAA;AAE/D,WAAO;AACP,iBAAa,QAAQ;AACnB,UAAI,OAAO,WAAW,YAAY;AAChC,kBAAU;AAAA,iBACD,OAAO,WAAW,UAAU;AACrC,YAAI,MAAM,QAAQ,SAAS;AACzB,gBAAM,CAAC,WAAW,YAAY;AAC9B,oBAAU,QAAQ,GAAG;AAAA,eAChB;AACL,oBAAU;AAAA;AAAA,aAEP;AACL,cAAM,IAAI,UAAU,iCAAiC,SAAS;AAAA;AAAA;AAGlE,uBAAmB,QAAQ;AACzB,cAAQ,OAAO;AACf,UAAI,OAAO,UAAU;AACnB,mBAAW,OAAO,OAAO,YAAY,IAAI,OAAO;AAAA;AAAA;AAGpD,qBAAiB,SAAS;AACxB,UAAI,SAAS;AACb,UAAI,YAAY,QAAQ,YAAY;AAClC;AAAA,eACO,MAAM,QAAQ,UAAU;AAC/B,eAAO,EAAE,SAAS,QAAQ,QAAQ;AAChC,gBAAM,QAAQ,QAAQ;AACtB,cAAI;AAAA;AAAA,aAED;AACL,cAAM,IAAI,UAAU,sCAAsC,UAAU;AAAA;AAAA;AAGxE,uBAAmB,QAAQ,QAAQ;AACjC,UAAI,SAAS;AACb,UAAI;AACJ,aAAO,EAAE,SAAS,UAAU,QAAQ;AAClC,YAAI,UAAU,QAAQ,OAAO,QAAQ;AACnC,kBAAQ,UAAU;AAClB;AAAA;AAAA;AAGJ,UAAI,OAAO;AACT,YAAI,eAAe,MAAM,OAAO,eAAe,SAAS;AACtD,mBAAS,OAAO,MAAM,MAAM,IAAI;AAAA;AAElC,cAAM,KAAK;AAAA,aACN;AACL,kBAAU,KAAK,CAAC,GAAG;AAAA;AAAA;AAAA;AAIzB,iBAAe,KAAK;AAClB,cAAU;AACV,UAAM,OAAO,MAAM;AACnB,UAAM,SAAS,UAAU;AACzB,iBAAa,SAAS;AACtB,QAAI,QAAQ,QAAQ,UAAU;AAC5B,aAAO,IAAI,OAAO,OAAO,OAAO,MAAM;AAAA;AAExC,WAAO,OAAO,OAAO,OAAO;AAAA;AAE9B,qBAAmB,MAAM,KAAK;AAC5B,cAAU;AACV,UAAM,OAAO,MAAM;AACnB,UAAM,YAAY,UAAU;AAC5B,mBAAe,aAAa;AAC5B,eAAW;AACX,QAAI,QAAQ,WAAW,YAAY;AACjC,aAAO,IAAI,UAAU,MAAM,MAAM;AAAA;AAEnC,WAAO,UAAU,MAAM;AAAA;AAEzB,eAAa,MAAM,KAAK,UAAU;AAChC,eAAW;AACX,cAAU;AACV,QAAI,CAAC,YAAY,OAAO,QAAQ,YAAY;AAC1C,iBAAW;AACX,YAAM;AAAA;AAER,QAAI,CAAC,UAAU;AACb,aAAO,IAAI,QAAQ;AAAA;AAErB,aAAS,MAAM;AACf,sBAAkB,SAAS,QAAQ;AACjC,mBAAa,IAAI,MAAM,MAAM,MAAM;AACnC,oBAAc,OAAO,MAAM,MAAM;AAC/B,eAAO,QAAQ;AACf,YAAI,OAAO;AACT,iBAAO;AAAA,mBACE,SAAS;AAClB,kBAAQ;AAAA,eACH;AACL,mBAAS,MAAM,MAAM;AAAA;AAAA;AAAA;AAAA;AAK7B,mBAAiB,MAAM,MAAM;AAC3B,QAAI;AACJ,QAAI;AACJ,cAAU,IAAI,MAAM,MAAM;AAC1B,eAAW,WAAW,OAAO;AAC7B,WAAO;AACP,kBAAc,OAAO,MAAM;AACzB,WAAK;AACL,eAAS;AACT,iBAAW;AAAA;AAAA;AAGf,mBAAiB,KAAK,UAAU;AAC9B,cAAU;AACV,iBAAa,WAAW,UAAU;AAClC,mBAAe,WAAW,UAAU;AACpC,QAAI,CAAC,UAAU;AACb,aAAO,IAAI,QAAQ;AAAA;AAErB,aAAS,MAAM;AACf,sBAAkB,SAAS,QAAQ;AACjC,YAAM,OAAO,MAAM;AACnB,gBAAU,IAAI,UAAU,MAAM,OAAO,MAAM,CAAC,OAAO,MAAM,UAAU;AACjE,YAAI,SAAS,CAAC,QAAQ,CAAC,OAAO;AAC5B,eAAK;AAAA,eACA;AACL,gBAAM,SAAS,UAAU,UAAU,MAAM;AACzC,cAAI,WAAW,UAAU,WAAW;AAClC;AAAA,mBACO,qBAAqB,SAAS;AACrC,kBAAM,QAAQ;AAAA,iBACT;AACL,kBAAM,SAAS;AAAA;AAEjB,eAAK,OAAO;AAAA;AAAA;AAGhB,oBAAc,OAAO,OAAO;AAC1B,YAAI,SAAS,CAAC,OAAO;AACnB,iBAAO;AAAA,mBACE,SAAS;AAClB,kBAAQ;AAAA,eACH;AACL,mBAAS,MAAM;AAAA;AAAA;AAAA;AAAA;AAKvB,uBAAqB,KAAK;AACxB,QAAI;AACJ,cAAU;AACV,iBAAa,eAAe,UAAU;AACtC,mBAAe,eAAe,UAAU;AACxC,UAAM,OAAO,MAAM;AACnB,cAAU,QAAQ,MAAM;AACxB,eAAW,eAAe,WAAW;AACrC,WAAO;AACP,kBAAc,OAAO;AACnB,iBAAW;AACX,WAAK;AAAA;AAAA;AAAA;AAIX,iBAAiB,OAAO,MAAM;AAC5B,SAAO,OAAO,UAAU,cAAc,MAAM,aAAc,MAAK,MAAM,cAAc,QAAQ,MAAM;AAAA;AAEnG,cAAc,OAAO;AACnB,MAAI;AACJ,OAAK,OAAO,OAAO;AACjB,QAAI,MAAM,KAAK,OAAO,MAAM;AAC1B,aAAO;AAAA;AAAA;AAGX,SAAO;AAAA;AAET,sBAAsB,MAAM,OAAO;AACjC,MAAI,OAAO,UAAU,YAAY;AAC/B,UAAM,IAAI,UAAU,aAAa,OAAO;AAAA;AAAA;AAG5C,wBAAwB,MAAM,OAAO;AACnC,MAAI,OAAO,UAAU,YAAY;AAC/B,UAAM,IAAI,UAAU,aAAa,OAAO;AAAA;AAAA;AAG5C,wBAAwB,MAAM,QAAQ;AACpC,MAAI,QAAQ;AACV,UAAM,IAAI,MAAM,kBAAkB,OAAO;AAAA;AAAA;AAG7C,oBAAoB,MAAM;AACxB,MAAI,CAAC,eAAe,SAAS,OAAO,KAAK,SAAS,UAAU;AAC1D,UAAM,IAAI,UAAU,yBAAyB,OAAO;AAAA;AAAA;AAGxD,oBAAoB,MAAM,WAAW,UAAU;AAC7C,MAAI,CAAC,UAAU;AACb,UAAM,IAAI,MAAM,MAAM,OAAO,4BAA4B,YAAY;AAAA;AAAA;AAGzE,eAAe,OAAO;AACpB,SAAO,gBAAgB,SAAS,QAAQ,IAAI,MAAM;AAAA;AAEpD,yBAAyB,OAAO;AAC9B,SAAO,QAAQ,SAAS,OAAO,UAAU,YAAY,aAAa,SAAS,cAAc;AAAA;AAE3F,8BAA8B,OAAO;AACnC,SAAO,OAAO,UAAU,YAAY,SAAS;AAAA;AAE/C,iBAAiB,OAAO;AACtB,QAAM,KAAK,cAAc,MAAM;AAAA;AAE/B,QAAM,QAAQ,GAAG;AACjB,MAAI;AACJ,OAAK,OAAO,OAAO;AACjB,UAAM,QAAQ,MAAM;AACpB,QAAI,SAAS,OAAO,UAAU,UAAU;AACtC,YAAM,OAAO,YAAY,QAAQ,MAAM,WAAW,OAAO,OAAO,IAAI;AAAA;AAAA;AAGxE,SAAO;AAAA;AAET,IAAI,kBAAkB;AACtB,uBAAuB,MAAM,WAAW;AACtC,MAAI,MAAM,aAAa;AACvB,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,CAAC,QAAQ,CAAE,aAAY,SAAS,CAAC,KAAK,MAAM;AAC9C,UAAM,IAAI,MAAM,yBAAyB,OAAO;AAAA;AAElD,MAAI,OAAO,KAAK,UAAU,UAAU;AAClC,WAAO,KAAK;AAAA;AAEd,aAAW,YAAY,OAAO,OAAO,KAAK;AAC1C,WAAS,SAAS;AAClB,MAAI,WAAW,KAAK,WAAW,SAAS,IAAI;AAC1C,WAAO,SAAS,GAAG;AAAA;AAErB,WAAS;AACT,SAAO,UAAU;AACf,WAAO,UAAU,cAAc,SAAS,SAAS;AAAA;AAEnD,SAAO,OAAO,KAAK;AAAA;AAErB,IAAI,eAAe;AACnB,IAAI,MAAM,GAAG;AACb,mBAAmB,QAAQ,UAAU,SAAS;AAC5C,MAAI,SAAS;AACb,MAAI;AACJ,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,MAAM,yCAAyC;AAAA;AAE3D,MAAI,CAAC,IAAI,KAAK,QAAQ,WAAW;AAC/B,UAAM,IAAI,MAAM;AAAA;AAElB,MAAI,OAAO,aAAa,YAAY;AAClC,UAAM,IAAI,MAAM;AAAA;AAElB,SAAO,EAAE,SAAS,OAAO,QAAQ;AAC/B,QAAI,CAAE,WAAU,SAAS;AACvB;AAAA;AAEF,aAAS,SAAS,KAAK,SAAS,OAAO,SAAS,QAAQ;AACxD,QAAI,OAAO,WAAW,UAAU;AAC9B,UAAI,SAAS,GAAG;AACd,iBAAS;AAAA;AAEX,eAAS,SAAS;AAAA;AAAA;AAAA;AAIxB,IAAI,UAAU;AACd,IAAI,0BAA0B;AAC9B,yBAAyB,UAAU;AACjC,SAAO,gBAAgB,eAAe;AAAA;AAExC,yBAAyB,UAAU;AACjC,SAAO;AACP,oBAAkB,QAAQ;AACxB,QAAI,WAAW,UAAU,OAAO;AAChC,QAAI,CAAC,UAAU;AACb,YAAM,IAAI,MAAM;AAAA;AAElB,YAAQ,UAAU,UAAU;AAAA;AAAA;AAGhC,wBAAwB,UAAU;AAChC,SAAO;AACP,mBAAiB,OAAO,QAAQ;AAC9B,WAAO,SAAS,OAAO,QAAQ;AAAA;AAAA;AAGnC,IAAI,iBAAiB;AACrB,IAAI,yBAAyB,eAAe,SAAS,OAAO,QAAQ,QAAQ;AAC1E,MAAI;AACJ,MAAI;AACJ,MAAI,MAAM,SAAS,gBAAgB,MAAM,SAAS,qBAAqB,gBAAgB,WAAW,KAAK;AACrG;AAAA;AAEF,aAAW,OAAO;AAClB,SAAO,SAAS,SAAS;AACzB,MAAI,SAAS,KAAK,SAAS,SAAS,GAAG,SAAS,cAAc,CAAE,SAAQ,KAAK,SAAS,aAAa;AACjG;AAAA;AAEF,WAAS,OAAO,QAAQ;AACxB,OAAK,SAAS,QAAQ;AACtB,MAAI,KAAK,YAAY,MAAM,UAAU;AACnC,SAAK,SAAS,QAAQ,MAAM,SAAS;AAAA;AAEvC,SAAO,SAAS;AAAA;AAElB,IAAI,uBAAuB,eAAe,SAAS,OAAO,QAAQ,QAAQ;AACxE,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,SAAS,KAAM,OAAM,SAAS,gBAAgB,MAAM,SAAS,sBAAsB,gBAAgB,WAAW,KAAK;AACrH,eAAW,OAAO;AAClB,eAAW,SAAS,SAAS;AAC7B,WAAO,SAAS,SAAS;AACzB,QAAK,EAAC,QAAQ,KAAK,SAAS,eAAe,YAAY,SAAS,SAAS,YAAY;AACnF,eAAS,OAAO,QAAQ;AACxB,eAAS,SAAS,KAAK;AACvB,UAAI,SAAS,YAAY,MAAM,UAAU;AACvC,iBAAS,SAAS,MAAM,MAAM,SAAS;AAAA;AAEzC,aAAO;AAAA;AAAA;AAAA;AAIb,IAAI,cAAc;AAClB,IAAI,UAAU;AACd,IAAI,eAAe;AACnB,IAAI,iBAAiB;AACrB,IAAI,kBAAkB;AACtB,IAAI,YAAY;AAChB,IAAI,aAAa;AACjB,IAAI,eAAe;AACnB,IAAI,aAAa;AACjB,IAAI,cAAc;AAClB,IAAI,OAAO;AACX,IAAI,aAAa;AACjB,IAAI,uBAAuB,eAAe,SAAS,OAAO,QAAQ,QAAQ;AACxE,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,SAAS,KAAM,OAAM,SAAS,gBAAgB,MAAM,SAAS,oBAAoB;AACnF,eAAW,OAAO;AAClB,eAAW,SAAS,SAAS;AAC7B,QAAI,YAAY,SAAS,SAAS,YAAY;AAC5C,kBAAY,SAAS;AACrB,eAAS;AACT,cAAQ;AACR,aAAO,SAAS,EAAE,YAAY;AAC5B,kBAAU,SAAS;AACnB,YAAI,QAAQ,SAAS,YAAY;AAC/B,mBAAS,OAAO,OAAO,OAAO,QAAQ;AACtC,kBAAQ;AAAA,mBACE,SAAQ,SAAS,gBAAgB,QAAQ,SAAS,sBAAsB,gBAAgB,KAAK,gBAAgB,WAAW;AAClI,gBAAM,KAAK;AAAA,eACN;AACL;AAAA;AAAA;AAGJ,UAAI,OAAO,SAAS,GAAG;AACrB,YAAI,MAAM,SAAS,GAAG;AACpB,uBAAa,MAAM;AAAA;AAErB,iBAAS,OAAO,QAAQ,YAAY;AACpC,iBAAS,WAAW,SAAS,SAAS,OAAO;AAC7C,eAAO,OAAO,OAAO,SAAS;AAC9B,YAAI,SAAS,YAAY,KAAK,UAAU;AACtC,mBAAS,SAAS,MAAM,KAAK,SAAS;AAAA;AAExC,eAAO;AAAA;AAAA;AAAA;AAAA;AAKf,IAAI,QAAQ;AACZ,IAAI,sBAAsB,eAAe,SAAS,OAAO,QAAQ,QAAQ;AACvE,MAAI,WAAW,OAAO;AACtB,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,aAAW,SAAS,SAAS;AAC7B,SAAO,SAAS,SAAS;AACzB,MAAI,YAAY,SAAS,SAAS,cAAe,OAAM,SAAS,gBAAgB,MAAM,SAAS,sBAAsB,gBAAgB,WAAW,OAAO;AACrJ,oBAAgB,gBAAgB;AAChC,WAAO;AACP,YAAQ,CAAC;AACT,YAAQ;AACR,QAAI,QAAQ,KAAK,SAAS,YAAY;AACpC,kBAAY,gBAAgB;AAC5B,aAAO;AACP,cAAQ,MAAM,OAAO,KAAK;AAC1B;AAAA;AAEF,QAAI,cAAc,SAAS,KAAM,EAAC,aAAa,UAAU,SAAS,IAAI;AACpE,eAAS,WAAW,SAAS,SAAS,OAAO;AAC7C,eAAS,OAAO,QAAQ;AACxB,UAAI,SAAS,YAAY,KAAK,UAAU;AACtC,iBAAS,SAAS,MAAM,KAAK,SAAS;AAAA;AAExC,aAAO;AAAA;AAAA;AAAA;AAIb,IAAI,mBAAmB,eAAe,SAAS,OAAO,QAAQ,QAAQ;AACpE,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,SAAS,KAAK,gBAAgB,WAAW,KAAK;AAChD,eAAW,OAAO;AAClB,eAAW,SAAS,SAAS;AAC7B,eAAW,SAAS;AACpB,QAAI,SAAS,SAAS,cAAc,YAAY,SAAS,WAAW,KAAK,SAAS,SAAS,MAAM,GAAG;AAClG,kBAAY,SAAS;AACrB,oBAAc;AACd,aAAO,SAAS,EAAE,YAAY;AAC5B,qBAAa,SAAS;AACtB,gBAAQ,gBAAgB;AACxB,YAAI,YAAY,MAAM,GAAG;AACvB,cAAI,MAAM,SAAS,GAAG;AACpB;AAAA;AAEF,cAAI,CAAC,UAAU,KAAK,QAAQ;AAC1B,0BAAc;AAAA;AAAA,mBAEP,UAAU,KAAK;AACxB,cAAI,YAAY,SAAS,SAAS,GAAG;AACnC;AAAA,iBACK;AACL;AAAA;AAAA;AAAA;AAIN,UAAI,CAAC,aAAa;AAChB,iBAAS,OAAO,QAAQ;AACxB,iBAAS,KAAK;AACd,YAAI,SAAS,YAAY,MAAM,UAAU;AACvC,mBAAS,SAAS,MAAM,MAAM,SAAS;AAAA;AAEzC,eAAO;AAAA;AAAA;AAAA;AAAA;AAKf,IAAI,aAAa,eAAe,SAAS,OAAO,QAAQ,QAAQ;AAC9D,MAAI,WAAW,OAAO;AACtB,MAAI;AACJ,MAAI,MAAM,SAAS,YAAY;AAC7B,WAAO,SAAS,SAAS;AACzB,QAAI,QAAQ,KAAK,SAAS,YAAY;AACpC,eAAS,OAAO,SAAS,GAAG;AAC5B,YAAM,WAAW,MAAM,SAAS,OAAO,KAAK;AAC5C,UAAI,KAAK,YAAY,MAAM,UAAU;AACnC,cAAM,SAAS,MAAM,KAAK,SAAS;AAAA;AAErC,aAAO;AAAA;AAAA;AAAA;AAIb,IAAI,yBAAyB;AAC7B,uBAAuB,UAAU;AAC/B,SAAO;AACP,mBAAiB,QAAQ;AACvB,QAAI,SAAS;AACb,QAAI,WAAW,UAAU,OAAO;AAChC,QAAI,CAAC,UAAU;AACb,YAAM,IAAI,MAAM;AAAA;AAElB,WAAO,EAAE,UAAU,UAAU;AAC3B,eAAS,SAAS,SAAS,QAAQ;AAAA;AAAA;AAAA;AAIzC,IAAI,kBAAkB;AACtB,IAAI,gBAAgB,gBAAgB,SAAS,OAAO,QAAQ,MAAM;AAChE,MAAI,WAAW,KAAK;AACpB,MAAI,CAAC,MAAM,UAAU;AACnB;AAAA;AAEF,MAAI,SAAS,KAAM,EAAC,KAAK,YAAY,CAAC,KAAK,SAAS,QAAQ;AAC1D,UAAM;AACN,SAAK,SAAS,QAAQ,MAAM,SAAS;AAAA;AAEvC,MAAI,WAAW,SAAS,SAAS,KAAM,EAAC,KAAK,YAAY,CAAC,KAAK,SAAS,MAAM;AAC5E,UAAM;AACN,SAAK,SAAS,MAAM,MAAM,SAAS;AAAA;AAAA;AAGvC,eAAe,MAAM;AACnB,MAAI,CAAC,KAAK,UAAU;AAClB,SAAK,WAAW;AAAA;AAAA;AAGpB,IAAI,wBAAwB,eAAe,SAAS,OAAO,QAAQ,QAAQ;AACzE,MAAI,WAAW,MAAM;AACrB,MAAI,YAAY;AAChB,MAAI;AACJ,MAAI;AACJ,SAAO,SAAS,EAAE,YAAY;AAC5B,QAAI,SAAS,WAAW,SAAS,YAAY;AAC3C;AAAA;AAAA;AAGJ,aAAW,OAAO,SAAS,SAAS;AACpC,MAAI,UAAU;AACZ,aAAS,WAAW,SAAS,SAAS,OAAO;AAC7C,WAAO,SAAS,OAAO,QAAQ;AAC/B,QAAI,SAAS,YAAY,MAAM,UAAU;AACvC,eAAS,SAAS,MAAM,MAAM,SAAS;AAAA;AAEzC,WAAO;AAAA;AAET,SAAO,OAAO,SAAS,SAAS;AAChC,MAAI,MAAM;AACR,SAAK,WAAW,SAAS,OAAO,KAAK;AACrC,QAAI,KAAK,YAAY,MAAM,UAAU;AACnC,WAAK,SAAS,QAAQ,MAAM,SAAS;AAAA;AAEvC,WAAO,SAAS,OAAO,QAAQ;AAAA;AAAA;AAGnC,IAAI,mBAAmB,eAAe,SAAS,OAAO,QAAQ,QAAQ;AACpE,MAAI,WAAW,MAAM;AACrB,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,YAAY,SAAS,SAAS,KAAK,SAAS,GAAG;AACjD,YAAQ,SAAS;AACjB,aAAS,SAAS;AAClB,eAAW,OAAO,SAAS,SAAS;AACpC,QAAK,OAAM,SAAS,gBAAgB,MAAM,SAAS,sBAAsB,YAAY,KAAK,gBAAgB,SAAS;AACjH,eAAS,SAAS,KAAK,SAAS;AAChC,UAAI,MAAM,YAAY,SAAS,UAAU;AACvC,iBAAS,SAAS,MAAM,MAAM,SAAS;AAAA;AAEzC,UAAI,UAAU,OAAO,YAAY,MAAM,UAAU;AAC/C,cAAM,SAAS,QAAQ,OAAO,SAAS;AAAA;AAEzC,aAAO,SAAS;AAAA;AAAA;AAAA;AAItB,IAAI,uCAAuC,eAAe,SAAS,OAAO,QAAQ,QAAQ;AACxF,MAAI,WAAW,MAAM;AACrB,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,YAAY,SAAS,SAAS,KAAK,SAAS,GAAG;AACjD,gBAAY;AACZ,WAAO,SAAS,EAAE,YAAY;AAC5B,aAAO,SAAS;AAChB,UAAI,KAAK,SAAS,YAAY;AAC5B,YAAI,CAAC,aAAa,KAAK,gBAAgB,QAAQ;AAC7C;AAAA;AAEF,mBAAW,OAAO;AAClB,mBAAW,SAAS,SAAS;AAC7B,iBAAS,WAAW,SAAS,SAAS,OAAO;AAC7C,iBAAS,OAAO,QAAQ;AACxB,YAAI,SAAS,YAAY,MAAM,UAAU;AACvC,mBAAS,SAAS,MAAM,MAAM,SAAS;AAAA;AAEzC,eAAO;AAAA;AAET,UAAI,KAAK,SAAS,gBAAgB,KAAK,SAAS,mBAAmB;AACjE;AAAA;AAAA;AAAA;AAAA;AAKR,IAAI,6BAA6B,eAAe,SAAS,OAAO,QAAQ,QAAQ;AAC9E,MAAI,WAAW,MAAM;AACrB,MAAI,WAAW,OAAO;AACtB,MAAI,WAAW,SAAS,SAAS;AACjC,MAAI,OAAO,SAAS;AACpB,MAAI,YAAY,QAAQ,KAAK,SAAS,cAAc,WAAW,KAAK,gBAAgB,QAAQ;AAC1F,aAAS,WAAW,SAAS,SAAS,OAAO;AAC7C,aAAS,OAAO,QAAQ;AACxB,QAAI,SAAS,YAAY,MAAM,UAAU;AACvC,eAAS,SAAS,MAAM,MAAM,SAAS;AAAA;AAEzC,WAAO;AAAA;AAAA;AAGX,IAAI,qBAAqB,IAAI,OAAO;AACpC,IAAI,wBAAwB,eAAe,SAAS,OAAO,QAAQ,QAAQ;AACzE,MAAI,WAAW,MAAM;AACrB,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,YAAY,SAAS,SAAS,GAAG;AACnC,aAAS,SAAS,SAAS,SAAS;AACpC,QAAI,UAAU,gBAAgB,YAAY,KAAK;AAC7C,aAAO,SAAS,SAAS,SAAS;AAClC,UAAI,QAAQ,KAAK,SAAS,cAAc,mBAAmB,KAAK,gBAAgB,MAAM,gBAAgB;AACpG,aAAK,SAAS,KAAK;AACnB,iBAAS;AACT,YAAI,OAAO,YAAY,KAAK,UAAU;AACpC,eAAK,SAAS,MAAM,OAAO,SAAS;AAAA;AAEtC,eAAO,OAAO,SAAS,SAAS;AAChC,YAAI,MAAM;AACR,gBAAM,WAAW,SAAS,OAAO,KAAK;AACtC,iBAAO,SAAS,OAAO,SAAS,GAAG;AACnC,cAAI,KAAK,YAAY,MAAM,UAAU;AACnC,kBAAM,SAAS,MAAM,KAAK,SAAS;AAAA;AAErC,iBAAO,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAM1B,IAAI,uBAAuB,eAAe,SAAS,OAAO,QAAQ,QAAQ;AACxE,MAAI,WAAW,MAAM;AACrB,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,CAAC,YAAY,SAAS,WAAW,KAAK,SAAS,GAAG;AACpD;AAAA;AAEF,cAAY;AACZ,SAAO,SAAS,EAAE,YAAY;AAC5B,WAAO,SAAS;AAChB,QAAI,KAAK,SAAS,YAAY;AAC5B;AAAA;AAEF,QAAI,KAAK,SAAS,gBAAgB,KAAK,SAAS,mBAAmB;AACjE,cAAQ,gBAAgB;AACxB,UAAI,UAAU,OAAO,UAAU,KAAK;AAClC;AAAA;AAEF,sBAAgB,OAAO,SAAS,SAAS;AACzC,oBAAc,WAAW,cAAc,SAAS,OAAO;AACvD,UAAI,cAAc,YAAY,MAAM,UAAU;AAC5C,sBAAc,SAAS,MAAM,MAAM,SAAS;AAAA;AAE9C,aAAO,SAAS,OAAO,QAAQ;AAC/B,aAAO;AAAA;AAAA;AAAA;AAIb,IAAI,0BAA0B,gBAAgB,SAAS,OAAO;AAC5D,MAAI,WAAW,MAAM;AACrB,MAAI,YAAY,SAAS;AACzB,MAAI,oBAAoB;AACxB,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,SAAO,SAAS,EAAE,YAAY;AAC5B,iBAAa,SAAS;AACtB,QAAI,WAAW,SAAS,gBAAgB,WAAW,SAAS,mBAAmB;AAC7E,UAAI,WAAW,SAAS,YAAY;AAClC,4BAAoB;AAAA;AAEtB;AAAA;AAEF,QAAI,CAAC,eAAe,KAAK,gBAAgB,cAAc;AACrD;AAAA;AAEF,QAAI,CAAC,mBAAmB;AACtB,0BAAoB;AACpB;AAAA;AAEF,QAAI,gBAAgB,gBAAgB,KAAK;AACvC;AAAA;AAEF,eAAW,SAAS,YAAY;AAChC,WAAO,SAAS,YAAY;AAC5B,QAAI,YAAY,SAAS,SAAS,YAAY;AAC5C,iBAAW,SAAS,YAAY;AAChC,UAAI,QAAQ,YAAY,KAAK,SAAS,oBAAoB,gBAAgB,cAAc,KAAK;AAC3F;AAAA;AAEF,eAAS,OAAO,WAAW;AAC3B,eAAS,SAAS,KAAK;AACvB,UAAI,WAAW,YAAY,SAAS,UAAU;AAC5C,iBAAS,SAAS,MAAM,WAAW,SAAS;AAAA;AAE9C;AAAA,eACS,QAAQ,KAAK,SAAS,YAAY;AAC3C,eAAS,OAAO,WAAW;AAC3B,WAAK,SAAS,QAAQ;AACtB,UAAI,WAAW,YAAY,KAAK,UAAU;AACxC,aAAK,SAAS,QAAQ,WAAW,SAAS;AAAA;AAAA;AAAA;AAAA;AAKlD,IAAI,gCAAgC,gBAAgB,SAAS,OAAO,QAAQ,QAAQ;AAClF,MAAI,WAAW,MAAM;AACrB,MAAI;AACJ,MAAI,YAAY,SAAS,SAAS,KAAK,SAAS,GAAG,SAAS,kBAAkB;AAC5E,WAAO,SAAS,OAAO,QAAQ,GAAG,SAAS;AAC3C,WAAO,SAAS;AAChB,QAAI,QAAQ,KAAK,YAAY,MAAM,UAAU;AAC3C,YAAM,SAAS,QAAQ,KAAK,SAAS;AAAA;AAAA;AAAA;AAI3C,IAAI,8BAA8B,eAAe,SAAS,OAAO,QAAQ,QAAQ;AAC/E,MAAI,WAAW,MAAM;AACrB,MAAI;AACJ,MAAI,YAAY,SAAS,SAAS,KAAK,SAAS,SAAS,SAAS,GAAG,SAAS,kBAAkB;AAC9F,WAAO,SAAS,OAAO,SAAS,GAAG,GAAG,MAAM,SAAS;AACrD,eAAW,SAAS,SAAS,SAAS;AACtC,QAAI,YAAY,SAAS,YAAY,MAAM,UAAU;AACnD,YAAM,SAAS,MAAM,SAAS,SAAS;AAAA;AAEzC,WAAO;AAAA;AAAA;AAGX,IAAI,yBAAyB,eAAe,SAAS,OAAO,QAAQ,QAAQ;AAC1E,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,MAAM,SAAS,gBAAgB;AACjC;AAAA;AAEF,aAAW,MAAM;AACjB,cAAY;AACZ,SAAO,EAAE,YAAY,SAAS,SAAS,GAAG;AACxC,WAAO,SAAS;AAChB,QAAI,KAAK,SAAS,oBAAoB,CAAC,aAAa,KAAK,gBAAgB,QAAQ;AAC/E;AAAA;AAEF,UAAM,WAAW,SAAS,MAAM,GAAG;AACnC,gBAAY;AAAA,MACV,MAAM;AAAA,MACN,UAAU,SAAS,MAAM,YAAY;AAAA;AAEvC,WAAO,SAAS,YAAY;AAC5B,WAAO,SAAS,YAAY;AAC5B,WAAO,SAAS,OAAO,SAAS,GAAG,GAAG,MAAM;AAC5C,QAAI,MAAM,YAAY,KAAK,YAAY,KAAK,UAAU;AACpD,YAAM,MAAM,SAAS;AACrB,YAAM,SAAS,MAAM,KAAK,SAAS;AACnC,gBAAU,WAAW,EAAE,OAAO,KAAK,SAAS,OAAO;AAAA;AAErD,WAAO,SAAS;AAAA;AAAA;AAGpB,IAAI,mBAAmB,eAAe,SAAS,OAAO,QAAQ,QAAQ;AACpE,MAAI,cAAc,SAAS,MAAM,SAAS,WAAW,GAAG;AACtD,WAAO,SAAS,OAAO,QAAQ;AAC/B,WAAO;AAAA;AAAA;AAGX,0BAA0B,WAAW,YAAY;AAC/C,SAAO;AACP,qBAAmB,MAAM;AACvB,QAAI,WAAW;AACf,QAAI,SAAS,KAAK;AAClB,QAAI,OAAO,KAAK;AAChB,QAAI,SAAS;AACb,QAAI,YAAY,OAAO,SAAS;AAChC,QAAI,QAAQ;AACZ,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,WAAO,EAAE,SAAS,OAAO,QAAQ;AAC/B,UAAI,WAAW,aAAa,OAAO,QAAQ,SAAS,aAAa,WAAW,KAAK,gBAAgB,OAAO,WAAW;AACjH,gBAAQ,OAAO;AACf,eAAO,OAAO;AACd,iBAAS,EAAE,MAAM,UAAU,OAAO,MAAM,OAAO,SAAS;AACxD,YAAI,MAAM,YAAY,KAAK,UAAU;AACnC,iBAAO,WAAW;AAAA,YAChB,OAAO,MAAM,SAAS;AAAA,YACtB,KAAK,KAAK,SAAS;AAAA;AAAA;AAGvB,iBAAS,KAAK;AACd,gBAAQ,SAAS;AAAA;AAAA;AAGrB,WAAO;AAAA;AAAA;AAGX,uBAAuB,SAAS;AAC9B,MAAI,OAAO,QAAQ;AACnB,MAAI,oBAAoB,QAAQ;AAChC,MAAI,YAAY,QAAQ;AACxB,MAAI,WAAW,aAAa,iBAAiB,QAAQ,eAAe;AACpE,SAAO;AACP,kBAAgB,OAAO;AACrB,QAAI,WAAW,KAAK,mBAAmB;AACvC,WAAO,EAAE,MAAM,UAAU,WAAW,SAAS,YAAY;AAAA;AAAA;AAG7D,uBAAiB;AAAA,EACf,YAAY,KAAK,MAAM;AACrB,QAAI,QAAQ,QAAQ;AACpB,SAAK,MAAM,QAAQ,OAAO,SAAS;AAAA;AAAA,EAErC,IAAI,KAAK,OAAO;AACd,QAAI,UAAU,MAAM;AACpB,QAAI,UAAU,KAAK;AACnB,QAAI,SAAS;AACb,QAAI,SAAS;AACX,aAAO,QAAQ,EAAE,SAAS;AACxB,gBAAQ,QAAQ;AAAA;AAAA;AAGpB,WAAO;AAAA;AAAA,EAET,MAAM,OAAO;AACX,WAAO,KAAK,aAAa,SAAS,KAAK;AAAA;AAAA,EAEzC,SAAS,OAAO;AACd,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAI,OAAO;AACX,QAAI,SAAS;AACb,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI,UAAU,QAAQ,UAAU,QAAQ;AACtC,cAAQ;AAAA,eACC,iBAAiB,QAAQ;AAClC,cAAQ,MAAM;AAAA;AAEhB,QAAI,OAAO,UAAU,UAAU;AAC7B,UAAI,YAAY,SAAU,EAAC,MAAM,MAAM,MAAM,GAAG,OAAO;AACrD,eAAO;AAAA;AAET,YAAM,IAAI,MAAM,0BAA0B,QAAQ;AAAA;AAEpD,QAAI,CAAC,OAAO;AACV,aAAO;AAAA;AAET,YAAQ,KAAK,WAAW,MAAM;AAC9B,eAAW;AACX,YAAQ;AACR,WAAO,SAAS,MAAM,QAAQ;AAC5B,kBAAY,MAAM,OAAO;AACzB,UAAI,WAAW,KAAK,YAAY;AAC9B,gBAAQ;AAAA,iBACC,YAAY,KAAK,YAAY;AACtC,gBAAQ;AAAA,iBACC,KAAK,KAAK,YAAY;AAC/B,gBAAQ;AAAA,aACH;AACL,gBAAQ;AAAA;AAEV;AACA,iBAAW;AACX,kBAAY;AACZ,aAAO;AACP,cAAQ;AACR;AAAA;AAEF;AACA,WAAO;AACP,oBAAgB;AACd,UAAI,SAAS,SAAU,UAAS,UAAU,SAAS,gBAAgB,cAAc,YAAY,WAAW,KAAK,aAAa;AACxH,iBAAS;AAAA,aACJ;AACL,YAAI,OAAO;AACT,iBAAO,aAAa,MAAM,OAAO;AAAA;AAEnC,gBAAQ;AAAA;AAAA;AAGZ,iBAAa,UAAU;AACrB,UAAI,MAAM;AACV,aAAO;AACP,aAAO;AACP,wBAAkB,OAAO;AACvB,eAAO,IAAI,IAAI,GAAG;AAAA;AAAA;AAGtB,6BAAyB;AACvB,aAAO;AAAA;AAET,iBAAa,MAAM,QAAQ;AACzB,UAAI,QAAQ;AACV,eAAO,SAAS,KAAK;AAAA,aAChB;AACL,eAAO,KAAK;AAAA;AAEd,aAAO;AAAA;AAET,yBAAqB;AACnB,UAAI,SAAS;AACb,sBAAgB,MAAM;AACpB,aAAK,WAAW,IAAI,SAAS;AAC7B,eAAO;AAAA;AAET,aAAO;AAAA;AAET,oBAAgB,UAAU;AACxB,UAAI,aAAa;AACjB,UAAI,YAAY;AAChB,gBAAU,SAAS;AACnB,aAAO,EAAE,aAAa,SAAS,QAAQ;AACrC,YAAI,SAAS,OAAO,gBAAgB,MAAM;AACxC,sBAAY;AACZ;AAAA;AAAA;AAGJ,UAAI,YAAY,GAAG;AACjB,kBAAU,SAAS;AAAA,aACd;AACL,iBAAS,SAAS,SAAS;AAAA;AAAA;AAG/B,sBAAkB,OAAO;AACvB,WAAK,QAAQ;AACb,WAAK,MAAM;AAAA;AAEb,mBAAe;AACb,aAAO,EAAE,MAAM,QAAQ;AAAA;AAAA;AAAA;AAI7B,WAAW,UAAU,WAAW;AAChC,WAAW,UAAU,iBAAiB,kBAAkB;AACxD,WAAW,UAAU,qBAAqB,kBAAkB;AAC5D,WAAW,UAAU,sBAAsB,kBAAkB;AAC7D,WAAW,UAAU,iBAAiB,kBAAkB;AACxD,WAAW,UAAU,eAAe,kBAAkB;AACtD,WAAW,UAAU,MAAM,WAAW,SAAS,SAAS,KAAK,SAAS;AACpE,UAAQ,OAAO,QAAQ,KAAK,OAAO;AAAA;AAErC,WAAW,UAAU,WAAW,WAAW,SAAS,SAAS,KAAK,SAAS;AACzE,UAAQ,OAAO,QAAQ,OAAO,QAAQ;AAAA;AAExC,UAAU,YAAY,gBAAgB,SAAS,OAAO,KAAK;AACzD,MAAI,MAAO,QAAO,SAAS;AAC3B,MAAI,SAAS,EAAE,MAAM,YAAY,UAAU;AAC3C,OAAK,aAAa,OAAO,KAAK;AAC9B,SAAO,IAAI;AAAA;AAEb,UAAU,YAAY,oBAAoB,cAAc,EAAE,MAAM,gBAAgB,WAAW;AAC3F,UAAU,YAAY,qBAAqB,cAAc;AAAA,EACvD,MAAM;AAAA,EACN,WAAW;AAAA,EACX,eAAe;AAAA,EACf,WAAW;AAAA;AAEb,UAAU,YAAY,gBAAgB,cAAc;AAAA,EAClD,MAAM;AAAA,EACN,WAAW;AAAA,EACX,eAAe;AAAA,EACf,WAAW;AAAA;AAEb,WAAW,UAAU,IAAI,oBAAoB;AAAA,EAC3C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAEF,WAAW,UAAU,IAAI,qBAAqB;AAAA,EAC5C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAEF,WAAW,UAAU,IAAI,gBAAgB;AAAA,EACvC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAEF,2BAA2B,MAAM;AAC/B,UAAQ;AACR,SAAO;AACP,sBAAoB,OAAO,KAAK,QAAQ;AACtC,QAAI,UAAU,QAAQ,UAAU,QAAQ;AACtC,cAAQ;AAAA;AAEV,WAAQ,QAAO,SAAS,OAAO,EAAE,MAAM,OAAO,OAAO,UAAU;AAAA;AAAA;AAGnE,mBAAmB,aAAa,KAAK,UAAU;AAC7C,cAAY,UAAU,OAAO,YAAY,OAAO;AAC9C,WAAO,KAAK,IAAI,KAAK,SAAS,MAAM,MAAM;AAAA;AAAA;AAG9C,oBAAoB,UAAU;AAC5B,SAAO;AACP,eAAa,KAAK,SAAS;AACzB,QAAI;AACJ,QAAI,CAAE,QAAO,OAAO;AAClB,YAAM,IAAI,MAAM;AAAA;AAElB,QAAI,CAAC,SAAS;AACZ;AAAA;AAEF,cAAU,MAAM;AAChB,cAAU,OAAO,YAAY,aAAa,CAAC,WAAW,QAAQ;AAC9D,QAAI,CAAC,KAAK,UAAU;AAClB,WAAK,WAAW;AAAA;AAElB,aAAS,MAAM,SAAS;AAAA;AAAA;AAG5B,iBAAiB,MAAM,QAAQ;AAC7B,MAAI,QAAQ;AACV,WAAO,SAAS,KAAK;AAAA;AAEvB,SAAO;AAAA;AAET,mBAAmB;AACjB,SAAO;AAAA;AAET,uBAAuB;AACrB,SAAO,OAAO,MAAM,EAAE,QAAQ,QAAQ;AAAA;AAExC,kBAAkB,MAAM,YAAY,IAAI;AACtC,MAAI,SAAS;AACb,MAAI,CAAC,QAAQ,CAAC,MAAM,QAAQ,SAAS,CAAC,KAAK,MAAM;AAC/C,UAAM,IAAI,MAAM,yBAAyB,OAAO;AAAA;AAElD,MAAI,OAAO,KAAK,UAAU;AACxB,WAAO,KAAK;AACd,QAAM,WAAY,OAAM,QAAQ,QAAQ,OAAO,KAAK,aAAa;AACjE,MAAI,SAAS,WAAW,KAAK,WAAW,SAAS,IAAI;AACnD,WAAO,SAAS,GAAG;AAAA;AAErB,QAAM,SAAS;AACf,SAAO,EAAE,SAAS,SAAS,QAAQ;AACjC,WAAO,UAAU,SAAS,SAAS,SAAS;AAAA;AAE9C,SAAO,OAAO,KAAK;AAAA;AAErB,2BAA2B;AACzB,SAAO,OAAO,MAAM,EAAE;AAAA;AAExB,kBAAkB,MAAM;AACtB,SAAO,SAAS;AAAA;AAElB,IAAM,SAAS,UAAU,IAAI,aAAa,IAAI,iBAAiB;AAC/D,IAAM,UAAU,SAAS,MAAM;AAC7B,MAAI,SAAS,UAAU,SAAS,MAAM;AACpC,WAAO;AAAA;AAET,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO,YAAY;AAAA;AAErB,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO,MAAM,QAAQ,QAAQ,WAAW,QAAQ,aAAa;AAAA;AAE/D,MAAI,OAAO,SAAS,YAAY;AAC9B,WAAO,YAAY;AAAA;AAErB,QAAM,IAAI,MAAM;AAAA;AAElB,oBAAoB,OAAO;AACzB,QAAM,SAAS;AACf,MAAI,SAAS;AACb,SAAO,EAAE,SAAS,MAAM,QAAQ;AAC9B,WAAO,UAAU,QAAQ,MAAM;AAAA;AAEjC,SAAO,YAAY;AACnB,kBAAgB,YAAY;AAC1B,QAAI,SAAS;AACb,WAAO,EAAE,SAAS,OAAO,QAAQ;AAC/B,UAAI,OAAO,QAAQ,KAAK,MAAM,GAAG;AAC/B,eAAO;AAAA;AAEX,WAAO;AAAA;AAAA;AAGX,sBAAsB,OAAO;AAC3B,SAAO,YAAY;AACnB,eAAa,MAAM;AACjB,QAAI;AACJ,SAAK,OAAO,OAAO;AACjB,UAAI,KAAK,SAAS,MAAM;AACtB,eAAO;AAAA;AAEX,WAAO;AAAA;AAAA;AAGX,qBAAqB,OAAO;AAC1B,SAAO,YAAY;AACnB,gBAAc,MAAM;AAClB,WAAO,QAAQ,KAAK,SAAS;AAAA;AAAA;AAGjC,qBAAqB,OAAO;AAC1B,SAAO;AACP,wBAAsB,YAAY;AAChC,WAAO,QAAQ,MAAM,KAAK,MAAM,GAAG;AAAA;AAAA;AAGvC,cAAc;AACZ,SAAO;AAAA;AAET,eAAe,GAAG;AAChB,SAAO;AAAA;AAET,IAAM,WAAW;AACjB,IAAM,OAAO;AACb,IAAM,OAAO;AACb,IAAM,eAAe,SAAS,MAAM,MAAM,SAAS,SAAS;AAC1D,MAAI,OAAO,SAAS,cAAc,OAAO,YAAY,YAAY;AAC/D,cAAU;AACV,cAAU;AACV,WAAO;AAAA;AAET,QAAM,KAAK,QAAQ;AACnB,QAAM,OAAO,UAAU,KAAK;AAC5B,UAAQ,MAAM,MAAM;AACpB,mBAAiB,MAAM,QAAQ,SAAS;AACtC,UAAM,QAAQ,OAAO,SAAS,YAAY,SAAS,OAAO,OAAO;AACjE,QAAI;AACJ,QAAI,OAAO,MAAM,SAAS,UAAU;AAClC,aAAO,OAAO,MAAM,YAAY,WAAW,MAAM,UAAU,OAAO,MAAM,SAAS,WAAW,MAAM,OAAO;AACzG,aAAO,eAAe,QAAQ,QAAQ;AAAA,QACpC,OAAO,WAAW,MAAM,MAAM,OAAQ,QAAO,MAAM,OAAO,MAAM,OAAO;AAAA;AAAA;AAG3E,WAAO;AACP,sBAAkB;AAChB,UAAI,SAAS;AACb,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI,CAAC,QAAQ,GAAG,MAAM,QAAQ,QAAQ,QAAQ,SAAS,MAAM,OAAO;AAClE,iBAAS,SAAS,QAAQ,MAAM;AAChC,YAAI,OAAO,OAAO,MAAM;AACtB,iBAAO;AAAA;AAAA;AAGX,UAAI,KAAK,YAAY,OAAO,OAAO,MAAM;AACvC,iBAAU,WAAU,KAAK,SAAS,SAAS,MAAM;AACjD,uBAAe,QAAQ,OAAO;AAC9B,eAAO,SAAS,MAAM,SAAS,KAAK,SAAS,QAAQ;AACnD,sBAAY,QAAQ,KAAK,SAAS,SAAS,QAAQ;AACnD,cAAI,UAAU,OAAO,MAAM;AACzB,mBAAO;AAAA;AAET,mBAAS,OAAO,UAAU,OAAO,WAAW,UAAU,KAAK,SAAS;AAAA;AAAA;AAGxE,aAAO;AAAA;AAAA;AAAA;AAIb,kBAAkB,OAAO;AACvB,MAAI,MAAM,QAAQ,QAAQ;AACxB,WAAO;AAAA;AAET,MAAI,OAAO,UAAU,UAAU;AAC7B,WAAO,CAAC,UAAU;AAAA;AAEpB,SAAO,CAAC;AAAA;AAEV,IAAM,QAAQ,SAAS,MAAM,MAAM,SAAS,SAAS;AACnD,MAAI,OAAO,SAAS,cAAc,OAAO,YAAY,YAAY;AAC/D,cAAU;AACV,cAAU;AACV,WAAO;AAAA;AAET,eAAa,MAAM,MAAM,UAAU;AACnC,oBAAkB,MAAM,SAAS;AAC/B,UAAM,SAAS,QAAQ,QAAQ,SAAS;AACxC,WAAO,QAAQ,MAAM,SAAS,OAAO,SAAS,QAAQ,QAAQ,MAAM;AAAA;AAAA;AAGxE,IAAM,qBAAqB;AAC3B,IAAI,cAAc;AAClB,4BAA4B,MAAM,QAAQ,QAAQ;AAChD,MAAI,KAAK,SAAS,qBAAqB,KAAK,SAAS;AACnD;AACF,MAAI,KAAK,UAAU;AACjB;AACF,MAAI,SAAS,GAAG;AACd,UAAM,UAAU,OAAO,SAAS,SAAS;AACzC,QAAK,YAAW,OAAO,SAAS,QAAQ,UAAU,QAAQ,UAAU,KAAK;AACvE;AAAA;AAAA;AAGJ,gBAAc,CAAC;AACf,OAAK,QAAQ;AAAA;AAEf,4BAA4B,MAAM,WAAW,QAAQ,QAAQ;AAC3D,MAAI,KAAK,SAAS;AAChB,WAAO;AACT,MAAI,KAAK,SAAS;AAChB,uBAAmB,MAAM,QAAQ;AACnC,MAAI,CAAC,eAAgB,SAAQ,OAAO,SAAS,KAAK,QAAQ;AACxD,SAAK,QAAQ,UAAU,KAAK;AAAA;AAE9B,MAAI,CAAE,SAAQ,OAAO,SAAS,KAAK;AACjC,WAAO;AACT,OAAK,SAAS,QAAQ,CAAC,WAAW,MAAM;AACtC,uBAAmB,WAAW,WAAW,GAAG;AAAA;AAE9C,SAAO;AAAA;AAET,uBAAuB,WAAW;AAChC,gBAAc;AACd,SAAO,CAAC,SAAS;AACf,UAAM,MAAM,gBAAgB,CAAC,MAAM,QAAQ,WAAW;AACpD,yBAAmB,MAAM,WAAW,QAAQ;AAAA;AAAA;AAAA;AAIlD,iCAAiC,cAAc;AAC7C,QAAM,QAAQ;AACd,QAAM,QAAQ,aAAa,MAAM;AACjC,MAAI,OAAO;AACT,aAAS,QAAQ,OAAO;AACtB,qBAAe,aAAa,QAAQ,IAAI,OAAO,KAAK,QAAQ,OAAO,KAAK;AAAA;AAAA;AAG5E,SAAO;AAAA;AAET,oBAAoB,KAAK,QAAQ,aAAa;AAC5C,WAAS,wBAAwB;AACjC,SAAO,IAAI,QAAQ,IAAI,OAAO,QAAQ,OAAO;AAAA;AAE/C,iBAAW;AAAA,EACT,YAAY,QAAQ,QAAQ,KAAK;AAC/B,oBAAgB,MAAM;AACtB,SAAK,QAAQ;AACb,SAAK,QAAQ;AAAA;AAAA,EAEf,eAAe;AACb,WAAO,KAAK,MAAM,KAAK,CAAC,GAAG,MAAM;AAC/B,UAAI,IAAI;AACR,aAAS,OAAK,EAAE,KAAK,UAAU,OAAO,SAAS,GAAG,UAAY,OAAK,EAAE,KAAK,UAAU,OAAO,SAAS,GAAG;AAAA;AAAA;AAAA,EAG3G,SAAS;AACP,UAAM,QAAQ;AACd,SAAK,eAAe,QAAQ,CAAC,SAAS,MAAM,KAAK,KAAK,SAAS,KAAK;AACpE,WAAO;AAAA;AAAA,EAET,OAAO,OAAO;AACZ,WAAO,QAAQ,KAAK,UAAU,QAAQ,CAAC,CAAC,KAAK,WAAW,QAAQ,WAAW,OAAO,OAAO;AACzF,WAAO;AAAA;AAAA,EAET,KAAK,OAAO;AACV,WAAO,QAAQ,KAAK,UAAU,QAAQ,CAAC,CAAC,KAAK,WAAW,QAAQ,WAAW,OAAO,KAAK;AACvF,UAAM,UAAU,KAAK,MAAM,OAAO,CAAC,SAAS,KAAK,QAAQ,IAAI,CAAC,SAAS,KAAK;AAC5E,WAAO,QAAQ,SAAS,MAAM,MAAM,KAAK,QAAQ,QAAQ;AAAA;AAAA,EAE3D,SAAS,MAAM;AACb,WAAO,SAAS,IAAI,eAAe,CAAC,UAAU,KAAK,KAAK,QAAQ,YAAY,MAAM,MAAM;AAAA;AAAA;AAG5F,yBAAmB,KAAK;AAAA,EACtB,cAAc;AACZ,UAAM,GAAG;AACT,oBAAgB,MAAM,QAAQ;AAAA;AAAA,EAEhC,OAAO,OAAO;AACZ,YAAQ,WAAW,OAAO,gBAAgB;AAC1C,QAAI,QAAQ,MAAM,OAAO;AACzB,YAAQ,WAAW,OAAO,MAAM;AAChC,UAAM,QAAQ,KAAK,MAAM,OAAO,CAAC,SAAS,KAAK,OAAO,KAAK,OAAO,GAAG;AACrE,QAAI,SAAS,MAAM,OAAO,OAAO;AAC/B,cAAQ,MAAM,MAAM,GAAG,MAAM;AAAA;AAE/B,WAAO;AAAA;AAAA;AAGX,wBAAkB,KAAK;AAAA,EACrB,cAAc;AACZ,UAAM,GAAG;AACT,oBAAgB,MAAM,QAAQ;AAAA;AAAA;AAGlC,IAAM,OAAO,IAAI,KAAK,SAAS;AAO/B,qBAAqB,MAAM;AACzB,SAAO,KAAK,SAAS;AAAA;AAEvB,IAAM,MAAM,IAAI,IAAI,SAAS;AAgB7B,IAAM,aAAa,OAAO,aAAa;;;AC1wEhC,gCAAgC,IAAI,iBAAiB;AAC1D,QAAM,gBAAgB,GAAG,SAAS,MAAM;AACxC,KAAG,SAAS,MAAM,OAAO,SAAU,QAAQ,KAAK,SAAS,KAAK,KAAK;AACjE,QAAI,SAAS,cAAc,QAAQ,KAAK,SAAS,KAAK;AAEtD,QAAI,CAAC;AAAmB,aAAO;AAG/B,QAAI,MAAM,KAAK,OAAO,MAAM,GAAG,SAAS,aAAa;AACnD,aAAO;AAAA;AAIT,aAAS,OAAO,QAAQ,SAAS;AACjC,aAAS,OAAO,QAAQ,SAAS;AAGjC,aAAS,OAAO,QAAQ,eAAe;AAEvC,WAAO,YAAY;AAAA;AAIrB,KAAG,SAAS,eAAe,GAAG,SAAS;AACvC,KAAG,SAAS,SAAS,SAAU,QAAQ,SAAS,KAAK;AACnD,UAAM,SAAS,GAAG,SAAS,aAAa,QAAQ,SAAS;AAEzD,QAAI,CAAC;AAAmB,aAAO;AAE/B,WAAO,uCAAuC;AAAA;AAEhD,SAAO;AAAA;;;ACjCT,+BAAkB;AAMlB,4BAA4B,SAAS;AAEnC,kBAAgB,SAAS,wCAAwC,MAAM;AACrE,UAAM,eAAe,gBAAgB;AACrC,UAAM,UAAU,CAAC,eAAe,iBAAO;AACvC,oBAAgB,iCAAQ;AACxB,oBAAgB,SAAS,CAAC;AAAA;AAAA;AAUvB,kBAAkB,SAAS;AAEhC,QAAM,eAAe,iBAAiB;AACtC,kBAAgB,SAAS;AAGzB,qBAAmB;AAEnB,SAAO;AAAA,IACL,iBAAiB,IAAI;AAEnB,sBAAgB,GAAG,IAAI;AAEvB,SAAG,IAAI,wBAAwB,MAAM;AAEnC,eAAO,gBAAgB;AAAA;AAEzB,aAAO;AAAA;AAAA;AAAA;;;AC5CN,sBAAsB;AAC3B,UAAQ,IAAI;AAAA;;;ACEd,OAAO,UAAU;AAAA,EACf;AAAA,EACA;AAAA;",
  "names": []
}
